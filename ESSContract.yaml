openapi: 3.0.3
info:
  title: ESS API Services
  description: |
    API contract for Employee Self Service (ESS) system

    The Employee Self Service (ESS) API supports the management and updating of employee personal data in compliance with applicable data protection regulations (e.g., UU PDP). This API enables employees and authorized personnel to perform various operations related to identity verification, personal information updates, and data request approvals.

    ## Functional Overview

    - Employees can initiate and manage updates to personal data, such as full name, contact details, address, bank account information, education history, family members, and social security data (BPJS, Telkomedika).

    - Document handling is supported for both uploads and downloads, including but not limited to KTP, NPWP, KK, BPJS cards, passports, and academic/professional certificates.

    - The system includes a structured request flow:
      - Requests can be saved as drafts or submitted for approval.
      - Admin HC users are responsible for reviewing and updating the status of requests to approved or rejected.
      - Rejected requests may include reviewer notes and can be revised and resubmitted by the employee.

    - Each request includes metadata such as timestamps (date and time in WIB), unique request IDs, reviewer information, and status history.

    - Users can track their request history, filtered by status (draft, submitted, approved, rejected), and export summaries as PDF when needed.

    - Consent and acknowledgment features are implemented to support legal compliance, allowing users to view and provide consent as required.

    - Session timeout is configured for 20 minutes of inactivity to maintain security and protect sensitive data access.

    This documentation is intended to ensure consistent understanding and usage across development teams involved in implementing or consuming these services.

    Tahap awal: tiap method diperlukan token (letakan dibagian authorization ketika testing endpoint di postman)
    example token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

    ## Frontend Integration Notes
    - **CORS**: API supports CORS for frontend integration
    - **Content-Type**: All requests should use `application/json`
    - **Authentication**: Bearer token required in Authorization header
    - **Rate Limiting**: 1000 requests per minute per user
    - **Response Format**: Consistent JSON format with `status`, `message`, and `data` fields
  version: 1.1.2
  contact:
    name: Backend Intern
    email: carolinesnt.2004@gmail.com

servers:
  - url: https://apigwsand.telkomsigma.co.id/mockapi/prism/essbe/
    description: Development server

tags:
  - name: Authentication
    description: SSO login/logout, token management, and session handling
    externalDocs:
      description: Authentication flow documentation
      url: https://docs.telkomsigma.co.id/ess/auth
  - name: Dashboard
    description: User dashboard data, summary, and personalized content
    externalDocs:
      description: Dashboard customization guide
      url: https://docs.telkomsigma.co.id/ess/dashboard
  - name: Favorite Apps
    description: Manage, sort, and list favorite applications for quick access
    externalDocs:
      description: Favorite apps management
      url: https://docs.telkomsigma.co.id/ess/favorites
  - name: Profile
    description: View and update user profile information and settings
    externalDocs:
      description: Profile management guide
      url: https://docs.telkomsigma.co.id/ess/profile
  - name: Update Personal Data
    description: Submit, draft, and track personal data changes with approval workflow
    externalDocs:
      description: Data update workflow
      url: https://docs.telkomsigma.co.id/ess/data-update
  - name: Documents
    description: Upload, download, and manage supporting documents
    externalDocs:
      description: Document management system
      url: https://docs.telkomsigma.co.id/ess/documents
  - name: Consent
    description: Data protection agreement and consent management
    externalDocs:
      description: Privacy and consent policies
      url: https://docs.telkomsigma.co.id/ess/consent
  - name: Export
    description: Export personal data as PDF and other formats
    externalDocs:
      description: Data export functionality
      url: https://docs.telkomsigma.co.id/ess/export
  - name: History & Revision
    description: Change history, status tracking, and revision management
    externalDocs:
      description: Audit trail and revision control
      url: https://docs.telkomsigma.co.id/ess/history

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login via SSO (Single Sign-On) untuk mengakses ESS
      description: |
        Endpoint ini digunakan untuk melakukan proses login user ke aplikasi ESS menggunakan SSO (Single Sign-On). 
        Jika login berhasil, akan mengembalikan access_token, refresh_token, dan data user (employee_name, email, avatar, role) yang digunakan untuk autentikasi dan otorisasi pada endpoint lain.
        Jika gagal, akan mengembalikan pesan error yang sesuai, seperti kesalahan kredensial, akun terkunci, atau layanan eksternal tidak tersedia.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          $ref: "#/components/responses/LoginSuccess"
        "400":
          description: Permintaan tidak valid, misal format email salah atau field kosong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                BadRequest:
                  value:
                    status: false
                    messages:
                      email:
                        - "The email field must be a valid email address."
                        - "The email field format is invalid."
        "401":
          description: Unauthorized - Kredensial salah, token tidak valid, atau password kadaluarsa.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - $ref: "#/components/schemas/MessageOnlyErrorResponse"
              examples:
                Unauthorized:
                  value:
                    status: false
                    messages: "incorrect username or password"
                Unauthenticated:
                  value:
                    message: "Unauthenticated."
                PasswordExpired:
                  value:
                    status: false
                    message: "Your password is expired."
        "423":
          description: Akun user terkunci sementara, misal karena terlalu banyak percobaan login gagal.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Your account is locked. Please try again later or please contact the support helpdesk."
        "503":
          description: Layanan eksternal (misal Mango/Active Directory) tidak tersedia.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                ServiceUnavailableMango:
                  value:
                    status: false
                    messages: "your data is unavailable in mango"
                ServiceUnavailableAD:
                  value:
                    status: false
                    messages: "your data is unavailable in active directory"
  /employees/profile:
    get:
      tags:
        - Profile
      summary: Mendapatkan profil karyawan yang sedang login (hanya baca)
      description: |
        Endpoint ini digunakan untuk mengambil data profil user yang sedang login. Data yang dikembalikan meliputi:
        - Nama karyawan (employee_name)
        - Email kantor (email)
        - Nama perusahaan (company)
        - Alamat kantor (company_address)
        - Nomor telepon (phone_number)
        - Foto profil ESS (photo_profile_ess)
        Data ini digunakan untuk menampilkan informasi profil user pada aplikasi ESS.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Profil user berhasil diambil beserta detail informasinya.
          headers:
            X-Request-ID:
              description: Unique request identifier for tracking
              schema:
                type: string
                example: "req_123456789"
            X-Rate-Limit-Remaining:
              description: Number of requests remaining in the current rate limit window
              schema:
                type: integer
                example: 999
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmployeeProfile"
              example:
                employee_name: Sarah Wijaya
                email: example.employee@sigma.co.id
                company: PT SIGMA CIPTA CARAKA
                company_address: Jl. Telekomunikasi No.1, Bandung
                phone_number: 08123456789
                photo_profile_ess: https://www.purina.co.id/sites/default/files/2023-01/15%20Nama%20Kucing%20Jantan%20dan%20Artinya%20copy.jpg
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid atau tidak ditemukan.
    put:
      tags:
        - Profile
      summary: Mengupdate foto profil ESS user yang sedang login
      description: |
        Endpoint ini digunakan untuk mengubah foto profil ESS milik user yang sedang login. Hanya field photo_profile_ess yang dapat diubah melalui endpoint ini. Cocok digunakan untuk fitur update foto profil pada aplikasi ESS.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProfilePhoto"
      responses:
        "200":
          description: Foto berhasil diperbarui.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticatedResponseWithPhoto"
              example:
                status: true
                message: Foto berhasil diperbarui.
                data:
                  photo_profile_ess: https://www.purina.co.id/sites/default/files/2023-01/15%20Nama%20Kucing%20Jantan%20dan%20Artinya%20copy.jpg
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Bad Request.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid.
        "413":
          description: File terlalu besar.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: File terlalu besar.
        "415":
          description: Format file tidak didukung.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Format file tidak didukung.

  /employees/details/basic_information:
    get:
      tags:
        - Update Personal Data
      summary: Ambil Informasi Dasar Karyawan
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk mengambil data informasi dasar karyawan yang sedang login.

        **Cara Kerja:**
        1. User mengirim request dengan bearer token yang valid
        2. Sistem mengambil data informasi dasar dari database berdasarkan user ID
        3. Data dikembalikan dalam format JSON lengkap
        4. Frontend menampilkan informasi pada halaman profil atau form edit

        **Data yang Dikembalikan:**
        - **Nama Lengkap**: Nama lengkap sesuai KTP
        - **NIK**: Nomor Induk Kependudukan
        - **Tempat Lahir**: Kota/kabupaten tempat lahir
        - **Tanggal Lahir**: Format YYYY-MM-DD
        - **Jenis Kelamin**: L (Laki-laki) atau P (Perempuan)
        - **Agama**: Agama yang dianut
        - **Status Perkawinan**: Belum Menikah, Menikah, Cerai
        - **Kewarganegaraan**: WNI atau WNA
        - **Golongan Darah**: A, B, AB, O
        - **NPWP**: Nomor Pokok Wajib Pajak (jika ada)
      responses:
        "200":
          description: Informasi dasar berhasil diambil
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicInformation"
              examples:
                basic_information:
                  $ref: "#/components/examples/BasicInformationExample"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Bad Request.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid.

    patch:
      tags:
        - Update Personal Data
      summary: Perbarui Informasi Dasar Karyawan
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk memperbarui informasi dasar karyawan, seperti nama lengkap, tempat lahir, tanggal lahir, jenis kelamin, golongan darah, status perkawinan, kewarganegaraan, agama, dan NPWP.
        Hanya kolom yang ingin diperbarui saja yang perlu dikirimkan (partial update).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BasicInformation"
      responses:
        "200":
          description: Permintaan perubahan informasi dasar berhasil dikirim dan menunggu approval
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: Permintaan perubahan informasi dasar berhasil dikirim dan sedang menunggu approval dari Admin HC.
        "400":
          description: Permintaan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Data yang dikirim tidak sesuai format.
        "401":
          description: Token tidak valid atau tidak ada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid.
        "422":
          description: Data tidak dapat diproses (validation error)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                ValidationError:
                  summary: Validation error example
                  value:
                    status: false
                    messages:
                      full_name:
                        - "Nama lengkap wajib diisi"
                        - "Nama lengkap maksimal 100 karakter"
                      birth_date:
                        - "Format tanggal lahir tidak valid"
        "429":
          description: Too Many Requests - Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Rate limit exceeded. Please try again later."

  /employees/details/address:
    get:
      tags:
        - Update Personal Data
      summary: Ambil Alamat Karyawan
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk mengambil data alamat tempat tinggal karyawan yang sedang login.

        **Cara Kerja:**
        1. User mengirim request dengan bearer token yang valid
        2. Sistem mengambil data alamat dari database berdasarkan user ID
        3. Data alamat KTP dan domisili dikembalikan dalam satu response
        4. Frontend menampilkan informasi pada form alamat

        **Data yang Dikembalikan:**
        - **Alamat KTP**: Alamat lengkap sesuai KTP (jalan, RT/RW, kelurahan, kecamatan)
        - **Provinsi KTP**: Provinsi tempat tinggal sesuai KTP
        - **Kota/Kabupaten KTP**: Kota atau kabupaten sesuai KTP
        - **Kode Pos KTP**: Kode pos sesuai KTP
        - **Alamat Domisili**: Alamat tempat tinggal saat ini (jika berbeda dengan KTP)
        - **Provinsi Domisili**: Provinsi domisili saat ini
        - **Kota/Kabupaten Domisili**: Kota domisili saat ini
        - **Kode Pos Domisili**: Kode pos domisili saat ini
      responses:
        "200":
          description: Alamat berhasil diambil
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Address"
              examples:
                address:
                  $ref: "#/components/examples/AddressExample"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Bad Request.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid.

    patch:
      tags:
        - Update Personal Data
      summary: Perbarui Alamat Karyawan
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk memperbarui data alamat karyawan, baik alamat sesuai KTP maupun alamat domisili saat ini.
        Hanya kolom yang ingin diperbarui yang perlu dikirimkan (partial update).
        Misalnya: perubahan pada alamat domisili karena pindah tempat tinggal sementara.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Address"
      responses:
        "200":
          description: Permintaan perubahan alamat berhasil dikirim dan menunggu approval
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: Permintaan perubahan alamat berhasil dikirim dan sedang menunggu approval dari Admin HC.
        "400":
          description: Permintaan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Format data tidak sesuai atau data tidak lengkap.
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid. Silakan login kembali.

  /employees/details/emergency_contact:
    get:
      tags:
        - Update Personal Data
      summary: Ambil Kontak Darurat
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk mengambil informasi kontak darurat yang dapat dihubungi jika terjadi keadaan darurat pada karyawan.

        **Cara Kerja:**
        1. User mengirim request dengan bearer token yang valid
        2. Sistem mengambil data kontak darurat dari database
        3. Data kontak darurat utama dan alternatif dikembalikan
        4. Frontend menampilkan informasi untuk keperluan emergency

        **Data yang Dikembalikan:**
        - **Nama Kontak Darurat**: Nama lengkap orang yang dapat dihubungi
        - **Hubungan**: Hubungan dengan karyawan (Orangtua, Pasangan, Saudara, dll)
        - **Nomor Telepon**: Nomor telepon yang dapat dihubungi 24 jam
        - **Alamat**: Alamat tempat tinggal kontak darurat
        - **Pekerjaan**: Pekerjaan kontak darurat
        - **Kontak Alternatif**: Kontak darurat kedua sebagai backup

        **Kegunaan:**
        - Emergency medical situations
        - Accident reporting
        - Family notification
        - Workplace safety compliance
      responses:
        "200":
          description: Kontak darurat berhasil diambil
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmergencyContact"
              examples:
                emergency_contact:
                  $ref: "#/components/examples/EmergencyContactExample"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Bad Request.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid.

    patch:
      tags:
        - Update Personal Data
      summary: Perbarui Kontak Darurat
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk memperbarui informasi kontak darurat karyawan.
        Pastikan nomor yang terdaftar aktif dan dapat dihubungi dalam keadaan darurat.
        Hanya kolom yang diubah yang perlu dikirim (partial update).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmergencyContact"
      responses:
        "200":
          description: Permintaan perubahan kontak darurat berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: Permintaan perubahan kontak darurat berhasil dikirim dan menunggu approval.
        "400":
          description: Permintaan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Format data tidak sesuai atau data tidak lengkap.
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid. Silakan login kembali.

  /employees/details/payroll_account:
    get:
      tags:
        - Update Personal Data
      summary: Ambil Informasi Rekening Payroll
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk mengambil informasi rekening payroll yang digunakan untuk transfer gaji karyawan setiap bulan.

        **Cara Kerja:**
        1. User mengirim request dengan bearer token yang valid
        2. Sistem mengambil data rekening payroll dari database
        3. Data rekening bank dan informasi pajak dikembalikan
        4. Frontend menampilkan informasi pada halaman payroll settings

        **Data yang Dikembalikan:**
        - **Nomor Rekening**: Nomor rekening bank untuk transfer gaji
        - **Nama Bank**: Nama bank penerima (BCA, Mandiri, BNI, BRI, dll)
        - **Nama Pemegang Rekening**: Nama sesuai rekening bank
        - **Cabang Bank**: Cabang bank tempat rekening dibuka
        - **Status Pajak**: Status penghasilan kena pajak (PKP/Non-PKP)
        - **NPWP**: Nomor Pokok Wajib Pajak untuk perhitungan pajak gaji
        - **Status NPWP**: Aktif atau non-aktif

        **Kegunaan:**
        - Proses payroll bulanan
        - Perhitungan pajak penghasilan
        - Transfer gaji dan tunjangan
        - Administrasi keuangan karyawan
      responses:
        "200":
          description: Rekening payroll berhasil diambil
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayrollAccount"
              examples:
                payroll_account:
                  $ref: "#/components/examples/PayrollAccountExample"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Bad Request.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid.

    patch:
      tags:
        - Update Personal Data
      summary: Perbarui Informasi Rekening Payroll
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk memperbarui informasi nomor rekening payroll karyawan.
        Pastikan rekening yang diberikan aktif, atas nama karyawan yang bersangkutan, dan digunakan untuk keperluan pembayaran gaji bulanan.
        Hanya kirim data yang ingin diperbarui (partial update).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PayrollAccount"
      responses:
        "200":
          description: Permintaan perubahan rekening payroll berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: Permintaan perubahan rekening payroll berhasil dikirim dan menunggu approval.
        "400":
          description: Permintaan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Nomor rekening tidak valid atau format tidak sesuai.
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid. Silakan login kembali.

  /employees/details/family:
    get:
      tags:
        - Update Personal Data
      summary: Ambil Data Keluarga
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk mengambil data keluarga karyawan yang sedang login.

        **Cara Kerja:**
        1. User mengirim request dengan bearer token yang valid
        2. Sistem mengambil data semua anggota keluarga dari database
        3. Data keluarga dikembalikan dalam bentuk array
        4. Frontend menampilkan daftar anggota keluarga

        **Data yang Dikembalikan untuk Setiap Anggota Keluarga:**
        - **Nama Lengkap**: Nama lengkap anggota keluarga
        - **Jenis Kelamin**: L (Laki-laki) atau P (Perempuan)
        - **Tanggal Lahir**: Format YYYY-MM-DD
        - **Tempat Lahir**: Kota/kabupaten tempat lahir
        - **Hubungan Keluarga**: Ayah, Ibu, Anak, Pasangan, Saudara
        - **Status Pernikahan**: Status pernikahan anggota keluarga
        - **Pekerjaan**: Pekerjaan anggota keluarga
        - **Alamat**: Alamat tempat tinggal
        - **Nomor Kartu Telkomedika**: Nomor kartu asuransi kesehatan
        - **Status Telkomedika**: Aktif atau tidak aktif
        - **Foto Kartu Keluarga**: URL foto KK

        **Kegunaan:**
        - Klaim asuransi kesehatan
        - Tunjangan keluarga
        - Data dependents untuk HR
        - Emergency contact information
      responses:
        "200":
          description: Data keluarga berhasil diambil
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Family"
              examples:
                family:
                  $ref: "#/components/examples/FamilyExample"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Bad Request.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid.

    patch:
      tags:
        - Update Personal Data
      summary: Perbarui Data Keluarga
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk memperbarui data keluarga karyawan.
        Permintaan dapat berupa:
        - Menambahkan anggota keluarga baru
        - Menghapus anggota keluarga (dengan menyertakan status aktif atau flag penghapusan)
        - Memperbarui informasi anggota keluarga yang sudah ada

        Setiap anggota keluarga direpresentasikan sebagai satu objek dalam array `Family`.
        Pastikan data yang dikirimkan sesuai dengan struktur skema dan valid (misalnya tanggal lahir tidak melebihi tanggal saat ini).

        Gunakan hanya data yang ingin diubah (partial update diperbolehkan).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Family"
      responses:
        "200":
          description: Permintaan perubahan data keluarga berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: Permintaan perubahan data keluarga berhasil dikirim dan menunggu approval.
        "400":
          description: Permintaan tidak valid atau format data salah
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Nama dan hubungan keluarga wajib diisi.
        "401":
          description: Tidak memiliki otorisasi atau token tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token akses tidak valid atau sudah kedaluwarsa.

  /employees/details/education:
    get:
      tags:
        - Update Personal Data
      summary: Ambil Riwayat Pendidikan
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk mengambil informasi riwayat pendidikan karyawan yang sedang login.

        **Cara Kerja:**
        1. User mengirim request dengan bearer token yang valid
        2. Sistem mengambil semua riwayat pendidikan dari database
        3. Data pendidikan dikembalikan dalam bentuk array berurutan
        4. Frontend menampilkan timeline pendidikan karyawan

        **Data yang Dikembalikan untuk Setiap Jenjang Pendidikan:**
        - **Jenjang Pendidikan**: SD, SMP, SMA, Diploma, S1, S2, S3
        - **Nama Institusi**: Nama sekolah/universitas
        - **Jurusan/Program Studi**: Jurusan yang diambil (untuk pendidikan tinggi)
        - **Tahun Masuk**: Tahun mulai pendidikan
        - **Tahun Lulus**: Tahun selesai pendidikan
        - **IPK/Nilai**: Indeks Prestasi Kumulatif atau nilai rata-rata
        - **Status Kelulusan**: Lulus, Tidak Lulus, Sedang Berjalan
        - **Lokasi Institusi**: Kota tempat institusi berada
        - **Akreditasi**: Status akreditasi institusi (A, B, C)

        **Kegunaan:**
        - Verifikasi kualifikasi untuk promosi jabatan
        - Assessment kompetensi karyawan
        - Database talent management
        - Compliance audit requirements
      responses:
        "200":
          description: Data pendidikan berhasil diambil
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Education"
              examples:
                education:
                  $ref: "#/components/examples/EducationExample"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Bad Request.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid.

    patch:
      tags:
        - Update Personal Data
      summary: Perbarui Riwayat Pendidikan
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk memperbarui riwayat pendidikan karyawan.

        Data yang dikirimkan dapat berupa:
        - Menambahkan riwayat pendidikan baru
        - Menghapus riwayat pendidikan tertentu
        - Memperbarui informasi pendidikan yang sudah ada

        Setiap entri pendidikan mencakup informasi seperti nama institusi, jenjang pendidikan, tahun masuk, dan tahun lulus.
        Jika memperbarui data, pastikan menyertakan identifier unik (misalnya `education_id`) untuk tiap entri yang ingin diubah.

        Gunakan partial update bila hanya ingin mengubah sebagian data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Education"
      responses:
        "200":
          description: Permintaan perubahan data pendidikan berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: Permintaan perubahan data pendidikan berhasil dikirim dan menunggu approval.
        "400":
          description: Format atau konten data tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Tahun masuk tidak boleh lebih besar dari tahun lulus.
        "401":
          description: Akses tidak sah atau token tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid atau sudah kedaluwarsa.

  /employees/details/social_security:
    get:
      tags:
        - Update Personal Data
      summary: Ambil Informasi Jaminan Sosial
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk mengambil informasi jaminan sosial karyawan yang sedang login.

        **Cara Kerja:**
        1. User mengirim request dengan bearer token yang valid
        2. Sistem mengambil data jaminan sosial dari database
        3. Data kepesertaan BPJS dan Telkomedika dikembalikan
        4. Frontend menampilkan status kepesertaan dan nomor kartu

        **Data yang Dikembalikan:**
        - **BPJS Kesehatan**: Nomor kartu, status aktif, tanggal mulai kepesertaan
        - **BPJS Ketenagakerjaan**: Nomor kartu, status aktif, jenis kepesertaan
        - **Telkomedika**: Nomor kartu, status aktif, tanggal berlaku
        - **Jenis Keanggotaan**: Peserta Pekerja Penerima Upah (PPU) atau mandiri
        - **Faskes Tingkat 1**: Fasilitas kesehatan rujukan tingkat pertama
        - **Status Kepesertaan**: Aktif, Tidak Aktif, atau Suspended
        - **Tanggungan Keluarga**: Jumlah anggota keluarga yang ditanggung

        **Kegunaan:**
        - Klaim reimbursement kesehatan
        - Verifikasi status kepesertaan
        - Perhitungan kontribusi BPJS
        - Medical check-up dan pengobatan
      responses:
        "200":
          description: Data jaminan sosial berhasil diambil
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SocialSecurity"
              examples:
                social_security:
                  $ref: "#/components/examples/SocialSecurityExample"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Bad Request.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid.

    patch:
      tags:
        - Update Personal Data
      summary: Perbarui Informasi Jaminan Sosial
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk memperbarui informasi jaminan sosial milik karyawan.

        Data yang dapat diperbarui meliputi:
        - Nomor BPJS Kesehatan
        - Nomor BPJS Ketenagakerjaan
        - Jenis keanggotaan
        - Status aktif
        - Instansi penerbit

        Pastikan nomor jaminan yang dimasukkan valid dan terdaftar secara resmi. 
        Gunakan identifier atau jenis jaminan untuk memastikan data yang tepat diperbarui.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SocialSecurity"
      responses:
        "200":
          description: Permintaan perubahan data jaminan sosial berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: Permintaan perubahan data jaminan sosial berhasil dikirim dan menunggu approval.
        "400":
          description: Data yang dikirimkan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Nomor BPJS tidak valid atau tidak ditemukan.
        "401":
          description: Token akses tidak sah atau sudah kedaluwarsa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak sah atau sesi sudah berakhir.

  /employees/details/medical_record:
    get:
      tags:
        - Update Personal Data
      summary: Ambil Rekam Medis
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk mengambil data riwayat kesehatan dan rekam medis karyawan yang sedang login.

        **Cara Kerja:**
        1. User mengirim request dengan bearer token yang valid
        2. Sistem mengambil data rekam medis dari database dengan enkripsi
        3. Data kesehatan sensitif dikembalikan dengan proteksi privacy
        4. Frontend menampilkan informasi untuk keperluan medis

        **Data yang Dikembalikan:**
        - **Golongan Darah**: A, B, AB, O dengan rhesus (+/-)
        - **Tinggi Badan**: Dalam centimeter (cm)
        - **Berat Badan**: Dalam kilogram (kg)
        - **Riwayat Penyakit Kronis**: Diabetes, hipertensi, asma, dll
        - **Alergi**: Alergi obat, makanan, atau zat tertentu
        - **Riwayat Operasi**: Operasi yang pernah dijalani
        - **Obat yang Dikonsumsi**: Obat rutin yang sedang dikonsumsi
        - **Medical Check-up Terakhir**: Tanggal dan hasil MCU terakhir
        - **Vaksinasi**: Riwayat vaksinasi yang pernah diterima
        - **Kondisi Khusus**: Kondisi medis khusus yang perlu diperhatikan

        **Kegunaan:**
        - Emergency medical treatment
        - Occupational health and safety
        - Medical insurance claims
        - Workplace health monitoring
        - Pre-employment health screening
      responses:
        "200":
          description: Rekam medis berhasil diambil
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MedicalRecord"
              examples:
                medical_record:
                  $ref: "#/components/examples/MedicalRecordExample"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Bad Request.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid.

    patch:
      tags:
        - Update Personal Data
      summary: Perbarui Rekam Medis
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk memperbarui rekam medis dan informasi kesehatan karyawan.

        Data yang dapat diperbarui meliputi:
        - Riwayat penyakit kronis
        - Alergi obat atau makanan
        - Catatan pemeriksaan kesehatan
        - Riwayat operasi
        - Golongan darah

        Pastikan informasi medis yang dimasukkan akurat dan terkini.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MedicalRecord"
      responses:
        "200":
          description: Permintaan perubahan rekam medis berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: Permintaan perubahan rekam medis berhasil dikirim dan menunggu approval.
        "400":
          description: Data yang dikirimkan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Nomor BPJS tidak valid atau tidak ditemukan.
        "401":
          description: Token akses tidak sah atau sudah kedaluwarsa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak sah atau sesi sudah berakhir.

  /employees/details/employment_info:
    get:
      tags:
        - Update Personal Data
      summary: Ambil Informasi Pekerjaan
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk mengambil informasi terkait pekerjaan karyawan yang sedang login.

        **Cara Kerja:**
        1. User mengirim request dengan bearer token yang valid
        2. Sistem mengambil data employment dari HR database
        3. Data pekerjaan dan jabatan dikembalikan lengkap
        4. Frontend menampilkan informasi karir dan posisi

        **Data yang Dikembalikan:**
        - **NIK Karyawan**: Nomor induk karyawan unik
        - **Nama Jabatan**: Posisi/jabatan saat ini
        - **Level Jabatan**: Staff, Supervisor, Manager, General Manager
        - **Divisi/Departemen**: Unit kerja tempat bertugas
        - **Lokasi Kerja**: Kantor atau site tempat bekerja
        - **Status Karyawan**: Kontrak, Tetap, atau Magang
        - **Tanggal Bergabung**: Tanggal mulai bekerja di perusahaan
        - **Tanggal Efektif Jabatan**: Tanggal mulai di posisi saat ini
        - **Supervisor**: Nama atasan langsung
        - **Grade/Band**: Level grade karyawan
        - **Cost Center**: Kode cost center untuk budgeting

        **Kegunaan:**
        - Organization chart dan struktur pelaporan
        - Performance management dan KPI tracking
        - Payroll dan benefit calculation
        - Career development planning
        - Access control dan authorization
      responses:
        "200":
          description: Informasi pekerjaan berhasil diambil
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmploymentInfo"
              examples:
                employment_info:
                  $ref: "#/components/examples/EmploymentInfoExample"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Bad Request.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid.

    patch:
      tags:
        - Update Personal Data
      summary: Perbarui Informasi Pekerjaan
      security:
        - bearerAuth: []
      description: |
        Endpoint ini digunakan untuk memperbarui informasi pekerjaan saat ini milik karyawan.

        Data yang dapat diperbarui meliputi:
        - Nama jabatan
        - Divisi atau departemen
        - Lokasi kerja
        - Status karyawan (kontrak/tetap)
        - Tanggal mulai jabatan
        - Tingkat jabatan (grade/level)

        Perubahan ini akan tercatat dalam histori perubahan jika sistem mendukung audit trail.

        Hanya pengguna yang memiliki hak akses tertentu yang dapat mengubah informasi pekerjaan.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmploymentInfo"
      responses:
        "200":
          description: Permintaan perubahan informasi pekerjaan berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: Permintaan perubahan informasi pekerjaan berhasil dikirim dan menunggu approval.
        "400":
          description: Data yang dikirim tidak valid atau tidak lengkap
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Jabatan tidak boleh kosong.
        "401":
          description: Token akses tidak sah atau telah kedaluwarsa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak sah atau sesi telah berakhir.

  /employees/details/basic_information/submit-request:
    post:
      tags:
        - Update Personal Data
      summary: Submit permintaan update data informasi dasar karyawan
      description: |
        Endpoint ini digunakan untuk mengirim permintaan update data informasi dasar karyawan ke sistem approval.

        **Data yang Dapat Diupdate:**
        - Nama lengkap, tempat lahir, tanggal lahir
        - Jenis kelamin, agama, status perkawinan
        - Kewarganegaraan, NIK KTP, nomor passport
        - Nomor telepon, email pribadi
        - Ukuran pakaian

        **Dokumen Pendukung:**
        - Foto KTP terbaru
        - Foto passport (jika ada perubahan)
        - Dokumen pendukung lainnya

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - change_reason
                - consent
              properties:
                change_reason:
                  type: string
                  description: Alasan perubahan data informasi dasar
                  minLength: 10
                  maxLength: 500
                  example: "Perubahan nama sesuai dengan akta nikah terbaru"
                consent:
                  type: boolean
                  description: Persetujuan pengelolaan data pribadi (wajib true)
                  example: true
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Dokumen pendukung seperti KTP, passport (maksimal 5 file)
                  maxItems: 5
            examples:
              BasicUpdateRequest:
                summary: Contoh request update informasi dasar
                value:
                  change_reason: "Update nama sesuai akta nikah"
                  consent: true
              WithDocuments:
                summary: Contoh request dengan dokumen
                value:
                  change_reason: "Perubahan alamat sesuai KTP baru"
                  consent: true
                  documents: ["file1.pdf", "file2.jpg"]
      responses:
        "200":
          description: Permintaan update data informasi dasar berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: "Permintaan perubahan informasi dasar berhasil dikirim dan menunggu approval."
                data:
                  request_id: "ESS-WAP001"
                  section: "basic_information"
                  status: "waiting_approval"
        "400":
          description: Data tidak valid atau consent tidak dicentang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Persetujuan pengelolaan data pribadi wajib dicentang untuk melanjutkan."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /employees/details/address/submit-request:
    post:
      tags:
        - Update Personal Data
      summary: Submit permintaan update data alamat karyawan
      description: |
        Endpoint ini digunakan untuk mengirim permintaan update data alamat karyawan ke sistem approval.

        **Data yang Dapat Diupdate:**
        - Alamat sesuai KTP (jalan, RT/RW, kelurahan, kecamatan, kota, provinsi, kode pos)
        - Alamat domisili saat ini (jika berbeda dengan KTP)

        **Dokumen Pendukung:**
        - Foto KTP terbaru
        - Surat keterangan domisili (jika alamat domisili berbeda)
        - Tagihan listrik/air/telepon sebagai bukti tempat tinggal

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - change_reason
                - consent
              properties:
                change_reason:
                  type: string
                  description: Alasan perubahan data alamat
                  minLength: 10
                  maxLength: 500
                  example: "Pindah rumah ke lokasi yang lebih dekat dengan kantor"
                consent:
                  type: boolean
                  description: Persetujuan pengelolaan data pribadi (wajib true)
                  example: true
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Dokumen pendukung seperti KTP, surat domisili (maksimal 5 file)
                  maxItems: 5
      responses:
        "200":
          description: Permintaan update data alamat berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: "Permintaan perubahan alamat berhasil dikirim dan menunggu approval."
                data:
                  request_id: "ESS-WAP002"
                  section: "address"
                  status: "waiting_approval"
        "400":
          description: Data tidak valid atau consent tidak dicentang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Alasan perubahan minimal 10 karakter."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /employees/details/emergency_contact/submit-request:
    post:
      tags:
        - Update Personal Data
      summary: Submit permintaan update data kontak darurat karyawan
      description: |
        Endpoint ini digunakan untuk mengirim permintaan update data kontak darurat karyawan ke sistem approval.

        **Data yang Dapat Diupdate:**
        - Nama kontak darurat
        - Hubungan dengan karyawan
        - Nomor telepon yang dapat dihubungi
        - Alamat kontak darurat

        **Dokumen Pendukung:**
        - Kartu identitas kontak darurat
        - Bukti hubungan keluarga (jika diperlukan)

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - change_reason
                - consent
              properties:
                change_reason:
                  type: string
                  description: Alasan perubahan data kontak darurat
                  minLength: 10
                  maxLength: 500
                  example: "Mengganti kontak darurat karena yang lama sudah tidak dapat dihubungi"
                consent:
                  type: boolean
                  description: Persetujuan pengelolaan data pribadi (wajib true)
                  example: true
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Dokumen pendukung identitas kontak darurat (maksimal 5 file)
                  maxItems: 5
      responses:
        "200":
          description: Permintaan update data kontak darurat berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: "Permintaan perubahan kontak darurat berhasil dikirim dan menunggu approval."
                data:
                  request_id: "ESS-WAP003"
                  section: "emergency_contact"
                  status: "waiting_approval"
        "400":
          description: Data tidak valid atau consent tidak dicentang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Nama kontak darurat wajib diisi."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /employees/details/account/submit-request:
    post:
      tags:
        - Update Personal Data
      summary: Submit permintaan update data rekening payroll karyawan
      description: |
        Endpoint ini digunakan untuk mengirim permintaan update data rekening payroll dan informasi pajak karyawan ke sistem approval.

        **Data yang Dapat Diupdate:**
        - Nomor rekening bank untuk payroll
        - Nama bank
        - Nama pemegang rekening
        - Status pajak
        - Nomor NPWP

        **Dokumen Pendukung:**
        - Foto halaman depan buku tabungan
        - Foto kartu NPWP
        - Surat keterangan dari bank (jika diperlukan)

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - change_reason
                - consent
              properties:
                change_reason:
                  type: string
                  description: Alasan perubahan data rekening payroll
                  minLength: 10
                  maxLength: 500
                  example: "Mengganti rekening payroll karena rekening lama sudah tidak aktif"
                consent:
                  type: boolean
                  description: Persetujuan pengelolaan data pribadi (wajib true)
                  example: true
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Dokumen pendukung seperti buku tabungan, NPWP (maksimal 5 file)
                  maxItems: 5
      responses:
        "200":
          description: Permintaan update data rekening payroll berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: "Permintaan perubahan rekening payroll berhasil dikirim dan menunggu approval."
                data:
                  request_id: "ESS-WAP004"
                  section: "account"
                  status: "waiting_approval"
        "400":
          description: Data tidak valid atau consent tidak dicentang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Nomor rekening tidak valid atau format tidak sesuai."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /employees/details/family/submit-request:
    post:
      tags:
        - Update Personal Data
      summary: Submit permintaan update data keluarga karyawan
      description: |
        Endpoint ini digunakan untuk mengirim permintaan update data keluarga karyawan ke sistem approval.

        **Data yang Dapat Diupdate:**
        - Menambah anggota keluarga baru (anak, pasangan)
        - Mengubah data anggota keluarga yang sudah ada
        - Menghapus anggota keluarga (jika sudah tidak relevan)
        - Status Telkomedika anggota keluarga

        **Dokumen Pendukung:**
        - Foto Kartu Keluarga (KK) terbaru
        - Akta kelahiran anak (jika menambah anak)
        - Akta nikah (jika menambah pasangan)
        - Kartu Telkomedika anggota keluarga

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - change_reason
                - consent
              properties:
                change_reason:
                  type: string
                  description: Alasan perubahan data keluarga
                  minLength: 10
                  maxLength: 500
                  example: "Menambahkan data anak yang baru lahir untuk keperluan asuransi kesehatan"
                consent:
                  type: boolean
                  description: Persetujuan pengelolaan data pribadi (wajib true)
                  example: true
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Dokumen pendukung seperti KK, akta kelahiran (maksimal 5 file)
                  maxItems: 5
      responses:
        "200":
          description: Permintaan update data keluarga berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: "Permintaan perubahan data keluarga berhasil dikirim dan menunggu approval."
                data:
                  request_id: "ESS-WAP005"
                  section: "family"
                  status: "waiting_approval"
        "400":
          description: Data tidak valid atau consent tidak dicentang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Nama anggota keluarga dan hubungan keluarga wajib diisi."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /employees/details/education/submit-request:
    post:
      tags:
        - Update Personal Data
      summary: Submit permintaan update data pendidikan karyawan
      description: |
        Endpoint ini digunakan untuk mengirim permintaan update data riwayat pendidikan karyawan ke sistem approval.

        **Data yang Dapat Diupdate:**
        - Menambah riwayat pendidikan baru (gelar terbaru)
        - Mengubah informasi pendidikan yang sudah ada
        - Menghapus riwayat pendidikan yang tidak valid
        - Jenjang pendidikan, nama institusi, jurusan, tahun lulus

        **Dokumen Pendukung:**
        - Foto ijazah asli
        - Transkrip nilai
        - Sertifikat akreditasi institusi (jika diperlukan)

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - change_reason
                - consent
              properties:
                change_reason:
                  type: string
                  description: Alasan perubahan data pendidikan
                  minLength: 10
                  maxLength: 500
                  example: "Menambahkan gelar master yang baru selesai untuk update kualifikasi"
                consent:
                  type: boolean
                  description: Persetujuan pengelolaan data pribadi (wajib true)
                  example: true
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Dokumen pendukung seperti ijazah, transkrip (maksimal 5 file)
                  maxItems: 5
      responses:
        "200":
          description: Permintaan update data pendidikan berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: "Permintaan perubahan data pendidikan berhasil dikirim dan menunggu approval."
                data:
                  request_id: "ESS-WAP006"
                  section: "education"
                  status: "waiting_approval"
        "400":
          description: Data tidak valid atau consent tidak dicentang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Tahun masuk tidak boleh lebih besar dari tahun lulus."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /employees/details/social_security/submit-request:
    post:
      tags:
        - Update Personal Data
      summary: Submit permintaan update data jaminan sosial karyawan
      description: |
        Endpoint ini digunakan untuk mengirim permintaan update data jaminan sosial karyawan ke sistem approval.

        **Data yang Dapat Diupdate:**
        - Nomor BPJS Kesehatan
        - Nomor BPJS Ketenagakerjaan
        - Nomor kartu Telkomedika
        - Status kepesertaan dan tanggal efektif

        **Dokumen Pendukung:**
        - Foto kartu BPJS Kesehatan
        - Foto kartu BPJS Ketenagakerjaan
        - Foto kartu Telkomedika
        - Surat keterangan dari BPJS (jika ada perubahan status)

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - change_reason
                - consent
              properties:
                change_reason:
                  type: string
                  description: Alasan perubahan data jaminan sosial
                  minLength: 10
                  maxLength: 500
                  example: "Update nomor BPJS karena penggantian kartu yang hilang"
                consent:
                  type: boolean
                  description: Persetujuan pengelolaan data pribadi (wajib true)
                  example: true
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Dokumen pendukung seperti kartu BPJS, Telkomedika (maksimal 5 file)
                  maxItems: 5
      responses:
        "200":
          description: Permintaan update data jaminan sosial berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: "Permintaan perubahan jaminan sosial berhasil dikirim dan menunggu approval."
                data:
                  request_id: "ESS-WAP007"
                  section: "social_security"
                  status: "waiting_approval"
        "400":
          description: Data tidak valid atau consent tidak dicentang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Nomor BPJS tidak valid atau tidak ditemukan."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /employees/details/medical/submit-request:
    post:
      tags:
        - Update Personal Data
      summary: Submit permintaan update data rekam medis karyawan
      description: |
        Endpoint ini digunakan untuk mengirim permintaan update data rekam medis dan informasi kesehatan karyawan ke sistem approval.

        **Data yang Dapat Diupdate:**
        - Status kesehatan umum
        - Golongan darah
        - Tinggi dan berat badan
        - Riwayat penyakit kronis
        - Alergi obat atau makanan
        - Informasi medical check-up terakhir

        **Dokumen Pendukung:**
        - Hasil medical check-up terbaru
        - Surat keterangan dokter
        - Hasil tes laboratorium
        - Foto rekam medis yang relevan

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - change_reason
                - consent
              properties:
                change_reason:
                  type: string
                  description: Alasan perubahan data rekam medis
                  minLength: 10
                  maxLength: 500
                  example: "Update data medical check-up tahunan dan perubahan status kesehatan"
                consent:
                  type: boolean
                  description: Persetujuan pengelolaan data pribadi (wajib true)
                  example: true
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Dokumen pendukung seperti hasil MCU, surat dokter (maksimal 5 file)
                  maxItems: 5
      responses:
        "200":
          description: Permintaan update data rekam medis berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: "Permintaan perubahan rekam medis berhasil dikirim dan menunggu approval."
                data:
                  request_id: "ESS-WAP008"
                  section: "medical"
                  status: "waiting_approval"
        "400":
          description: Data tidak valid atau consent tidak dicentang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Data kesehatan yang dikirimkan tidak valid."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /employees/details/employment/submit-request:
    post:
      tags:
        - Update Personal Data
      summary: Submit permintaan update data informasi pekerjaan karyawan
      description: |
        Endpoint ini digunakan untuk mengirim permintaan update data informasi pekerjaan karyawan ke sistem approval.

        **Data yang Dapat Diupdate:**
        - Jabatan dan level posisi
        - Divisi atau departemen
        - Status karyawan (kontrak/tetap)
        - Tanggal bergabung dan tanggal mulai posisi
        - Informasi supervisor
        - Grade dan band position

        **Dokumen Pendukung:**
        - Surat keterangan perubahan jabatan
        - Kontrak kerja terbaru
        - Surat promosi atau mutasi

        **Catatan:** Update employment info memerlukan approval khusus dari HR dan supervisor

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - change_reason
                - consent
              properties:
                change_reason:
                  type: string
                  description: Alasan perubahan data informasi pekerjaan
                  minLength: 10
                  maxLength: 500
                  example: "Promosi jabatan dari Staff menjadi Senior Staff sesuai SK terbaru"
                consent:
                  type: boolean
                  description: Persetujuan pengelolaan data pribadi (wajib true)
                  example: true
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Dokumen pendukung seperti SK, kontrak kerja (maksimal 5 file)
                  maxItems: 5
      responses:
        "200":
          description: Permintaan update data informasi pekerjaan berhasil dikirim
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: "Permintaan perubahan informasi pekerjaan berhasil dikirim dan menunggu approval."
                data:
                  request_id: "ESS-WAP009"
                  section: "employment"
                  status: "waiting_approval"
        "400":
          description: Data tidak valid atau consent tidak dicentang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Jabatan tidak boleh kosong."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "403":
          description: Tidak memiliki hak akses untuk mengubah data pekerjaan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Anda tidak memiliki hak akses untuk mengubah informasi pekerjaan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /documents/download/ktp:
    get:
      tags:
        - Documents
      summary: Mengunduh dokumen KTP (Kartu Tanda Penduduk)
      description: |
        Endpoint ini digunakan untuk mengunduh dokumen KTP karyawan yang telah diunggah sebelumnya.

        **File yang Dapat Diunduh:**
        - Foto KTP bagian depan
        - Foto KTP bagian belakang (jika ada)
        - KTP dalam format scan/foto berkualitas tinggi

        **Format File:** JPG, PNG, PDF
        **Ukuran Maksimal:** File yang diunduh sesuai dengan ukuran asli yang diunggah

      security:
        - bearerAuth: []
      responses:
        "200":
          description: File dokumen KTP berhasil diunduh
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: Header disposisi untuk unduhan file
              schema:
                type: string
                example: attachment; filename="KTP_Employee_S0242422.pdf"
            Content-Type:
              description: Tipe konten file
              schema:
                type: string
                example: "application/pdf"
        "400":
          description: Permintaan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Format permintaan download tidak valid."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "404":
          description: Dokumen KTP tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Dokumen KTP tidak ditemukan untuk karyawan ini."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /documents/download/kk:
    get:
      tags:
        - Documents
      summary: Mengunduh dokumen KK (Kartu Keluarga)
      description: |
        Endpoint ini digunakan untuk mengunduh dokumen Kartu Keluarga karyawan yang telah diunggah sebelumnya.

        **File yang Dapat Diunduh:**
        - Foto Kartu Keluarga lengkap
        - Scan KK dalam resolusi tinggi
        - KK terbaru yang sudah diverifikasi

        **Format File:** JPG, PNG, PDF
        **Kegunaan:** Untuk keperluan verifikasi data keluarga dan klaim asuransi

      security:
        - bearerAuth: []
      responses:
        "200":
          description: File dokumen Kartu Keluarga berhasil diunduh
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: Header disposisi untuk unduhan file
              schema:
                type: string
                example: attachment; filename="KK_Employee_S0242422.pdf"
        "400":
          description: Permintaan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Format permintaan download tidak valid."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "404":
          description: Dokumen Kartu Keluarga tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Dokumen Kartu Keluarga tidak ditemukan untuk karyawan ini."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /documents/download/npwp:
    get:
      tags:
        - Documents
      summary: Mengunduh dokumen NPWP (Nomor Pokok Wajib Pajak)
      description: |
        Endpoint ini digunakan untuk mengunduh dokumen NPWP karyawan yang telah diunggah sebelumnya.

        **File yang Dapat Diunduh:**
        - Foto kartu NPWP asli
        - Scan NPWP dalam format PDF
        - NPWP terbaru yang masih berlaku

        **Format File:** JPG, PNG, PDF
        **Kegunaan:** Untuk keperluan administrasi payroll dan perhitungan pajak

      security:
        - bearerAuth: []
      responses:
        "200":
          description: File dokumen NPWP berhasil diunduh
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: Header disposisi untuk unduhan file
              schema:
                type: string
                example: attachment; filename="NPWP_Employee_S0242422.pdf"
        "400":
          description: Permintaan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Format permintaan download tidak valid."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "404":
          description: Dokumen NPWP tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Dokumen NPWP tidak ditemukan untuk karyawan ini."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /documents/download/bpjs:
    get:
      tags:
        - Documents
      summary: Mengunduh dokumen BPJS (Kesehatan & Ketenagakerjaan)
      description: |
        Endpoint ini digunakan untuk mengunduh dokumen BPJS karyawan yang telah diunggah sebelumnya.

        **File yang Dapat Diunduh:**
        - Kartu BPJS Kesehatan
        - Kartu BPJS Ketenagakerjaan
        - Kartu Telkomedika
        - Surat keterangan kepesertaan BPJS

        **Format File:** JPG, PNG, PDF
        **Kegunaan:** Untuk keperluan klaim kesehatan dan verifikasi kepesertaan

      security:
        - bearerAuth: []
      responses:
        "200":
          description: File dokumen BPJS berhasil diunduh
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: Header disposisi untuk unduhan file
              schema:
                type: string
                example: attachment; filename="BPJS_Employee_S0242422.pdf"
        "400":
          description: Permintaan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Format permintaan download tidak valid."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "404":
          description: Dokumen BPJS tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Dokumen BPJS tidak ditemukan untuk karyawan ini."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /documents/download/passport:
    get:
      tags:
        - Documents
      summary: Mengunduh dokumen Passport
      description: |
        Endpoint ini digunakan untuk mengunduh dokumen Passport karyawan yang telah diunggah sebelumnya.

        **File yang Dapat Diunduh:**
        - Halaman foto dan biodata passport
        - Halaman visa (jika ada)
        - Passport yang masih berlaku

        **Format File:** JPG, PNG, PDF
        **Kegunaan:** Untuk keperluan perjalanan dinas luar negeri dan verifikasi identitas internasional

      security:
        - bearerAuth: []
      responses:
        "200":
          description: File dokumen Passport berhasil diunduh
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: Header disposisi untuk unduhan file
              schema:
                type: string
                example: attachment; filename="Passport_Employee_S0242422.pdf"
        "400":
          description: Permintaan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Format permintaan download tidak valid."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "404":
          description: Dokumen Passport tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Dokumen Passport tidak ditemukan untuk karyawan ini."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /documents/download/ijazah:
    get:
      tags:
        - Documents
      summary: Mengunduh dokumen Ijazah
      description: |
        Endpoint ini digunakan untuk mengunduh dokumen Ijazah karyawan yang telah diunggah sebelumnya.

        **File yang Dapat Diunduh:**
        - Ijazah pendidikan terakhir
        - Ijazah dari berbagai jenjang pendidikan
        - Transkrip nilai (jika tersedia)
        - Sertifikat kelulusan

        **Format File:** JPG, PNG, PDF
        **Kegunaan:** Untuk keperluan verifikasi kualifikasi pendidikan dan promosi jabatan

      security:
        - bearerAuth: []
      responses:
        "200":
          description: File dokumen Ijazah berhasil diunduh
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: Header disposisi untuk unduhan file
              schema:
                type: string
                example: attachment; filename="Ijazah_Employee_S0242422.pdf"
        "400":
          description: Permintaan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Format permintaan download tidak valid."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "404":
          description: Dokumen Ijazah tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Dokumen Ijazah tidak ditemukan untuk karyawan ini."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."

  /documents/download/foto:
    get:
      tags:
        - Documents
      summary: Mengunduh dokumen Foto Profil dan Foto Pendukung
      description: |
        Endpoint ini digunakan untuk mengunduh foto profil dan foto pendukung karyawan yang telah diunggah sebelumnya.

        **File yang Dapat Diunduh:**
        - Foto profil formal untuk keperluan kantor
        - Foto untuk ID card karyawan
        - Foto pendukung lainnya yang telah diunggah
        - Foto untuk keperluan administrasi HR

        **Format File:** JPG, PNG
        **Kegunaan:** Untuk keperluan ID card, profil ESS, dan administrasi HR

      security:
        - bearerAuth: []
      responses:
        "200":
          description: File foto berhasil diunduh
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: Header disposisi untuk unduhan file
              schema:
                type: string
                example: attachment; filename="Foto_Employee_S0242422.jpg"
        "400":
          description: Permintaan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Format permintaan download tidak valid."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "404":
          description: Foto tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Foto tidak ditemukan untuk karyawan ini."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan pada server."
  /consent:
    post:
      tags:
        - Consent
      summary: Submit persetujuan perlindungan data pribadi (consent)
      description: |
        Endpoint ini digunakan untuk mengirim persetujuan user terhadap pengelolaan dan perlindungan data pribadi sesuai regulasi yang berlaku.

        **Cara Kerja:**
        1. User membaca ketentuan privasi dan perlindungan data
        2. User memberikan consent melalui checkbox atau form persetujuan
        3. Frontend mengirim consent status ke endpoint ini
        4. Sistem mencatat consent dengan timestamp dan IP address
        5. Consent ini wajib sebelum user dapat melakukan update data personal

        **Jenis Consent yang Diperlukan:**
        - **Data Processing Consent**: Persetujuan pemrosesan data pribadi
        - **Data Storage Consent**: Persetujuan penyimpanan data
        - **Data Sharing Consent**: Persetujuan berbagi data untuk keperluan HR
        - **Marketing Consent**: Persetujuan penggunaan data untuk komunikasi internal
        - **Third Party Consent**: Persetujuan berbagi data dengan pihak ketiga (BPJS, bank, dll)

        **Compliance Requirements:**
        - **UU PDP Indonesia**: Undang-Undang Perlindungan Data Pribadi
        - **GDPR**: General Data Protection Regulation (untuk karyawan EU)
        - **Company Policy**: Kebijakan internal perusahaan
        - **Audit Trail**: Pencatatan lengkap untuk audit compliance
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                agreed:
                  type: boolean
      responses:
        "200":
          description: Persetujuan data protection berhasil diterima dan dicatat.
        "400":
          description: Permintaan tidak valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Permintaan tidak valid.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid atau tidak ditemukan.
        "500":
          description: Terjadi kesalahan pada server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Terjadi kesalahan pada server.
  /employees/update-history:
    get:
      tags:
        - History & Revision
      summary: Mendapatkan riwayat permintaan perubahan data personal user
      description: |
        Endpoint ini digunakan untuk mengambil daftar riwayat permintaan perubahan data pribadi user yang sedang login. Mendukung paginasi (8 data per halaman) dan filter berdasarkan status (draft, submitted, approved, rejected). Juga mengembalikan rekap jumlah status permintaan pada field status_summary.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Nomor halaman untuk paginasi (8 data per halaman)
        - in: query
          name: status
          schema:
            type: string
            enum: [draft, submitted, approved, rejected]
          description: Filter riwayat permintaan berdasarkan status
      responses:
        "200":
          description: Berhasil mengambil riwayat permintaan perubahan data beserta info user dan rekap status.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_summary:
                    type: object
                    properties:
                      draft:
                        type: integer
                      approved:
                        type: integer
                      waiting_approval:
                        type: integer
                      rejected:
                        type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/HistoryRequestItem"
                  page:
                    type: integer
                  total_pages:
                    type: integer
              example:
                status_summary:
                  approved: 5
                  rejected: 1
                  draft: 2
                  waiting_approval: 1
                data:
                  - request_id: ESS-APROV001
                    update: address
                    status: approved
                    date_change: 2025-07-20T09:00:00Z
                    approved_at: 2025-07-21T10:30:00Z
                    reviewer: Dewi Putri
                    reason_update: Pindah tempat tinggal

                  - request_id: ESS-APROV002
                    update: family
                    status: approved
                    date_change: 2025-07-10T10:00:00Z
                    approved_at: 2025-07-11T09:00:00Z
                    reviewer: Linda Kusuma
                    reason_update: Tambah data anak

                  - request_id: ESS-APROV003
                    update: education
                    status: approved
                    date_change: 2025-07-05T15:20:00Z
                    approved_at: 2025-07-06T10:45:00Z
                    reviewer: Andi Pratama
                    reason_update: Update ijazah terakhir

                  - request_id: ESS-APROV004
                    update: emergency_contact
                    status: approved
                    date_change: 2025-06-28T12:00:00Z
                    approved_at: 2025-06-29T13:30:00Z
                    reviewer: Siti Nurhaliza
                    reason_update: Ganti nomor kontak darurat

                  - request_id: ESS-APROV005
                    update: payroll_account
                    status: approved
                    date_change: 2025-07-02T08:45:00Z
                    approved_at: 2025-07-03T09:00:00Z
                    reviewer: Bambang Widodo
                    reason_update: Perubahan nomor rekening

                  - request_id: ESS-RJCT001
                    update: education
                    status: rejected
                    date_change: 2025-07-18T13:30:00Z
                    approved_at: null
                    reviewer: Joko Susilo
                    reason_update: Update gelar pendidikan terakhir

                  - request_id: ESS-DF001
                    update: data_employee
                    status: draft
                    date_change: 2025-07-25T14:00:00Z
                    approved_at: null
                    reviewer: null
                    reason_update: Perubahan data email pribadi
                    changes:
                      private_email: ivyovy01@gmail.com

                  - request_id: ESS-DF002
                    update: address
                    status: draft
                    date_change: 2025-07-19T09:30:00Z
                    approved_at: null
                    reviewer: null
                    reason_update: Tambah alamat tinggal baru
                    changes:
                      domicile_address:
                        street_name: "Jl. Cempaka Baru No.12"
                        city: "Depok"
                        postal_code: "16433"

                  - request_id: ESS-WAP010
                    update: family
                    status: waiting_approval
                    date_change: 2025-07-22T16:00:00Z
                    approved_at: null
                    reviewer: null
                    reason_update: Tambah data anak
                    changes:
                      name: "Zahra Safira"
                      gender: "Perempuan"
                      date_of_birth: "2020-05-12"
                      relation: "Anak"
                      marital_status: "Single"

        "400":
          description: Permintaan tidak valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Permintaan tidak valid.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid atau tidak ditemukan.
        "500":
          description: Terjadi kesalahan pada server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Terjadi kesalahan pada server.

  /employees/update-history/ESS-DF001:
    get:
      tags:
        - History & Revision
      summary: Mendapatkan detail permintaan perubahan data ESS-DF001 (Draft)
      description: |
        Endpoint ini digunakan untuk mengambil detail lengkap dari permintaan perubahan data ESS-DF001 dengan status draft.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Berhasil mengambil detail permintaan perubahan data draft.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmittedRequestResponse"
              examples:
                draft:
                  $ref: "#/components/examples/DraftHistoryExample"
        "400":
          description: Permintaan tidak valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Permintaan tidak valid.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid atau tidak ditemukan.
        "500":
          description: Terjadi kesalahan pada server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Terjadi kesalahan pada server.

  /employees/update-history/ESS-WAP010:
    get:
      tags:
        - History & Revision
      summary: Mendapatkan detail permintaan perubahan data ESS-WAP010 (Waiting Approval)
      description: |
        Endpoint ini digunakan untuk mengambil detail lengkap dari permintaan perubahan data ESS-WAP010 dengan status waiting approval.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Berhasil mengambil detail permintaan perubahan data waiting approval.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmittedRequestResponse"
              examples:
                waitingapproval:
                  $ref: "#/components/examples/WaitingApprovalHistoryExample"
        "400":
          description: Permintaan tidak valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Permintaan tidak valid.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid atau tidak ditemukan.
        "500":
          description: Terjadi kesalahan pada server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Terjadi kesalahan pada server.

  /employees/update-history/ESS-APROV011:
    get:
      tags:
        - History & Revision
      summary: Mendapatkan detail permintaan perubahan data ESS-APROV011 (Approved)
      description: |
        Endpoint ini digunakan untuk mengambil detail lengkap dari permintaan perubahan data ESS-APROV011 dengan status approved.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Berhasil mengambil detail permintaan perubahan data approved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApprovedRequestResponse"
              examples:
                approved:
                  $ref: "#/components/examples/ApprovedRequestExample"
        "400":
          description: Permintaan tidak valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Permintaan tidak valid.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid atau tidak ditemukan.
        "500":
          description: Terjadi kesalahan pada server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Terjadi kesalahan pada server.

  /employees/update-history/ESS-RJCT012:
    get:
      tags:
        - History & Revision
      summary: Mendapatkan detail permintaan perubahan data ESS-APROV012 (Rejected)
      description: |
        Endpoint ini digunakan untuk mengambil detail lengkap dari permintaan perubahan data ESS-RJCT012 dengan status rejected.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Berhasil mengambil detail permintaan perubahan data rejected.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RejectedRequestResponse"
              examples:
                rejected:
                  $ref: "#/components/examples/RejectedRequestExample"
        "400":
          description: Permintaan tidak valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Permintaan tidak valid.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid atau tidak ditemukan.
        "500":
          description: Terjadi kesalahan pada server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Terjadi kesalahan pada server.

  /employees/update-history/ESS-DF001/download:
    get:
      tags:
        - History & Revision
      summary: Mendownload data permintaan perubahan ESS-DF001 sebagai PDF
      description: |
        Endpoint ini digunakan untuk mengunduh data permintaan perubahan ESS-DF001 (Draft) sebagai file PDF.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Berhasil mengunduh data permintaan perubahan sebagai PDF.
          content:
            application/pdf:
              schema:
                type: string
                format: binary

  /employees/update-history/ESS-APROV006/download:
    get:
      tags:
        - History & Revision
      summary: Mendownload data permintaan perubahan ESS-APROV006 sebagai PDF
      description: |
        Endpoint ini digunakan untuk mengunduh data permintaan perubahan ESS-APROV006 (Waiting Approval) sebagai file PDF.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Berhasil mengunduh data permintaan perubahan sebagai PDF.
          content:
            application/pdf:
              schema:
                type: string
                format: binary

  /employees/update-history/ESS-APROV011/download:
    get:
      tags:
        - History & Revision
      summary: Mendownload data permintaan perubahan ESS-APROV011 sebagai PDF
      description: |
        Endpoint ini digunakan untuk mengunduh data permintaan perubahan ESS-APROV011 (Approved) sebagai file PDF.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Berhasil mengunduh data permintaan perubahan sebagai PDF.
          content:
            application/pdf:
              schema:
                type: string
                format: binary

  /employees/update-history/ESS-APROV012/download:
    get:
      tags:
        - History & Revision
      summary: Mendownload data permintaan perubahan ESS-APROV012 sebagai PDF
      description: |
        Endpoint ini digunakan untuk mengunduh data permintaan perubahan ESS-APROV012 (Rejected) sebagai file PDF.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Berhasil mengunduh data permintaan perubahan sebagai PDF.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        "400":
          description: Permintaan tidak valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Permintaan tidak valid.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid atau tidak ditemukan.
        "404":
          description: Dokumen tidak ditemukan.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Dokumen tidak ditemukan.
        "500":
          description: Terjadi kesalahan pada server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Terjadi kesalahan pada server.

  /employees/update-history/edit/ESS-DF001:
    patch:
      tags:
        - History & Revision
      summary: Mengedit permintaan perubahan data ESS-DF001 (Draft)
      description: |
        Endpoint ini digunakan untuk mengedit isi dari permintaan perubahan data ESS-DF001 dengan status 'draft'.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                change_reason:
                  type: string
                  description: Alasan perubahan data
                  example: Ada kesalahan penulisan nama keluarga.
                consent:
                  type: boolean
                  description: Persetujuan pengelolaan data pribadi
                  example: true
                updated_data:
                  type: object
                  description: Data baru yang ingin diubah (struktur tergantung jenis data)
                  example:
                    name: "Claire"
                    address: "Jl. Mawar No. 7"
                documents:
                  example:
                    documents: data:application/pdf;base64,JVBERi0xLjQKJ...etc
              required:
                - change_reason
                - consent
      responses:
        "200":
          description: Permintaan perubahan data berhasil diubah statusnya.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Request updated successfully
                  request_id:
                    type: string
                    example: "ESS-DF001"

  /employees/update-history/edit/ESS-RJCT012:
    patch:
      tags:
        - History & Revision
      summary: Mengedit permintaan perubahan data ESS-RJCT12 (Rejected)
      description: |
        Endpoint ini digunakan untuk mengedit isi dari permintaan perubahan data ESS-RJCT012 dengan status 'rejected' untuk diperbaiki dan disubmit ulang.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                change_reason:
                  type: string
                  description: Alasan perubahan data
                  example: Update gelar pendidikan terakhir dengan dokumen yang sesuai.
                consent:
                  type: boolean
                  description: Persetujuan pengelolaan data pribadi
                  example: true
                updated_data:
                  type: object
                  description: Data baru yang ingin diubah (struktur tergantung jenis data)
                  example:
                    education_level: "S2"
                    major: "Teknik Industri"
                    institution: "Universitas Indonesia"
                    end_year: 2024
                documents:
                  example:
                    documents: data:application/pdf;base64,JVBERi0xLjQKJ...etc
              required:
                - change_reason
                - consent
      responses:
        "200":
          description: Permintaan perubahan data berhasil diubah statusnya.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Request updated successfully
                  request_id:
                    type: string
                    example: "ESS-RJCT012"
        "400":
          description: Permintaan tidak valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Permintaan tidak valid.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid atau tidak ditemukan.
        "404":
          description: Request ID tidak ditemukan.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Request ID tidak ditemukan.
        "500":
          description: Terjadi kesalahan pada server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Terjadi kesalahan pada server.

  /employees/update-history/ESS-DF001/delete:
    delete:
      tags:
        - History & Revision
      summary: Menghapus permintaan perubahan data draft ESS-DF001
      description: |
        Endpoint ini digunakan untuk menghapus permintaan perubahan data draft ESS-DF001. Hanya permintaan dengan status 'draft' yang dapat dihapus.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Draft request berhasil dihapus.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Draft request deleted successfully
        "400":
          description: Hanya draft request yang dapat dihapus.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Only draft requests can be deleted
        "404":
          description: Request ID tidak ditemukan.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Request ID tidak ditemukan.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid atau tidak ditemukan.
        "500":
          description: Terjadi kesalahan pada server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Terjadi kesalahan pada server.

  /employees/favorites/:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan semua aplikasi favorit milik user yang sedang login
      description: |
        Endpoint ini digunakan untuk mengambil daftar aplikasi favorit milik user yang sedang login.

        **Cara Kerja:**
        1. User mengirim request dengan bearer token yang valid
        2. Sistem mengambil daftar aplikasi favorit dari database
        3. Data dikembalikan sesuai urutan yang diatur user (drag-and-drop)
        4. Frontend menampilkan aplikasi favorit pada dashboard utama ESS

        **Fitur yang Didukung:**
        - **Search**: Pencarian aplikasi favorit berdasarkan nama
        - **Category Filter**: Filter berdasarkan kategori (HR, IT, Financial, Marketing)
        - **Sorting**: Urutan sesuai preferensi user (favorite_order)
        - **Status**: Menampilkan status aktif/non-aktif aplikasi

        **Data yang Dikembalikan untuk Setiap Aplikasi:**
        - **App ID**: Unique identifier aplikasi
        - **Nama Aplikasi**: Nama lengkap aplikasi
        - **Kode Aplikasi**: Kode singkat untuk referensi
        - **Deskripsi**: Penjelasan fungsi aplikasi
        - **URL**: Link untuk mengakses aplikasi
        - **Icon**: URL gambar icon aplikasi
        - **Platform**: Platform tempat aplikasi berjalan
        - **Kategori**: HR, IT Services, Financial, Marketing
        - **Favorite Order**: Urutan dalam daftar favorit
        - **Last Accessed**: Waktu terakhir user mengakses aplikasi

        **Kegunaan:**
        - Dashboard personalisasi user
        - Quick access ke aplikasi yang sering digunakan
        - Productivity enhancement
        - User experience optimization
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: Mencari aplikasi favorit berdasarkan nama
        - in: query
          name: category
          schema:
            type: string
          description: Filter aplikasi favorit berdasarkan kategori
      responses:
        "200":
          description: Data favorit berhasil diambil.
          content:
            application/json:
              schema:
                type: object
                properties:
                  favorites:
                    type: array
                    items:
                      $ref: "#/components/schemas/FavoriteApp"
              example:
                status: true
                message: Data favorit berhasil diambil.
                favorites: []
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid.
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Terjadi kesalahan pada server.
    post:
      tags:
        - Favorite Apps
      summary: Menambahkan aplikasi ke favorit
      description: |
        Endpoint ini digunakan untuk menambahkan aplikasi ke daftar favorit milik user yang sedang login.

        **Cara Kerja:**
        1. User menekan tombol "Add to Favorites" pada aplikasi
        2. Frontend mengirim app_id aplikasi yang dipilih
        3. Sistem menambahkan aplikasi ke daftar favorit user
        4. Aplikasi akan muncul di dashboard favorit user
        5. Sistem memberikan urutan otomatis pada aplikasi baru

        **Proses yang Terjadi:**
        - Validasi app_id yang dikirim
        - Cek apakah aplikasi sudah ada di favorit user (prevent duplicate)
        - Assign urutan terbaru dalam daftar favorit
        - Simpan timestamp penambahan aplikasi
        - Update database user favorites

        **Data yang Diperlukan:**
        - **App ID**: ID unik aplikasi yang ingin ditambahkan
        - **Bearer Token**: Token autentikasi user yang valid

        **Batasan:**
        - Maksimal 50 aplikasi favorit per user
        - Tidak dapat menambahkan aplikasi yang sama dua kali
        - Hanya aplikasi aktif yang dapat ditambahkan

        **Response Success:**
        - Status berhasil dengan message konfirmasi
        - Data aplikasi yang baru ditambahkan
        - Urutan baru dalam daftar favorit
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FavoriteAppRequest"
      responses:
        "201":
          description: Aplikasi ditambahkan ke favorit.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: Aplikasi ditambahkan ke favorit.
        "400":
          description: ID app tidak valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: ID app tidak valid.
        "409":
          description: Sudah ditambahkan sebelumnya.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Sudah ditambahkan sebelumnya.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid.
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Terjadi kesalahan pada server.

  /employees/favorites/sigpass/delete:
    delete:
      tags:
        - Favorite Apps
      summary: Menghapus aplikasi Sigpass dari favorit
      description: |
        Endpoint ini digunakan untuk menghapus aplikasi Sigpass (Single Sign-On) dari daftar favorit milik user yang sedang login.

        **Aplikasi Sigpass:**
        - **Nama**: Sigpass
        - **Kode**: SG
        - **Deskripsi**: Aplikasi autentikasi Single Sign-On (SSO) untuk mengakses berbagai layanan internal Telkomsigma
        - **URL**: https://sigpass-sso.telkomsigma.co.id/

      security:
        - bearerAuth: []
      responses:
        "204":
          description: Aplikasi Sigpass berhasil dihapus dari favorit
          headers:
            X-Removed-App:
              description: Nama aplikasi yang dihapus
              schema:
                type: string
                example: "Sigpass"
        "404":
          description: Aplikasi Sigpass tidak ditemukan dalam daftar favorit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi Sigpass tidak ditemukan dalam daftar favorit Anda."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat menghapus aplikasi dari favorit."

  /employees/favorites/mango/delete:
    delete:
      tags:
        - Favorite Apps
      summary: Menghapus aplikasi Mango dari favorit
      description: |
        Endpoint ini digunakan untuk menghapus aplikasi Mango dari daftar favorit milik user yang sedang login.

        **Aplikasi Mango:**
        - **Nama**: Mango
        - **Kode**: SA
        - **Deskripsi**: Aplikasi manajemen karyawan untuk pengajuan cuti, izin, dan pengelolaan data karyawan
        - **URL**: https://www.xl.co.id/

      security:
        - bearerAuth: []
      responses:
        "204":
          description: Aplikasi Mango berhasil dihapus dari favorit
          headers:
            X-Removed-App:
              description: Nama aplikasi yang dihapus
              schema:
                type: string
                example: "Mango"
        "404":
          description: Aplikasi Mango tidak ditemukan dalam daftar favorit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi Mango tidak ditemukan dalam daftar favorit Anda."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat menghapus aplikasi dari favorit."

  /employees/favorites/slack/delete:
    delete:
      tags:
        - Favorite Apps
      summary: Menghapus aplikasi Slack dari favorit
      description: |
        Endpoint ini digunakan untuk menghapus aplikasi Slack dari daftar favorit milik user yang sedang login.

        **Aplikasi Slack:**
        - **Nama**: Slack
        - **Kode**: SL
        - **Deskripsi**: Platform kolaborasi tim untuk komunikasi, berbagi file, dan integrasi dengan berbagai layanan kerja
        - **URL**: https://slack.com/

      security:
        - bearerAuth: []
      responses:
        "204":
          description: Aplikasi Slack berhasil dihapus dari favorit
          headers:
            X-Removed-App:
              description: Nama aplikasi yang dihapus
              schema:
                type: string
                example: "Slack"
        "404":
          description: Aplikasi Slack tidak ditemukan dalam daftar favorit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi Slack tidak ditemukan dalam daftar favorit Anda."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat menghapus aplikasi dari favorit."

  /employees/favorites/fintrack/delete:
    delete:
      tags:
        - Favorite Apps
      summary: Menghapus aplikasi Fintrack dari favorit
      description: |
        Endpoint ini digunakan untuk menghapus aplikasi Fintrack dari daftar favorit milik user yang sedang login.

        **Aplikasi Fintrack:**
        - **Nama**: Fintrack
        - **Kode**: FT
        - **Deskripsi**: Aplikasi pelacakan pengeluaran dan pemasukan perusahaan secara real-time
        - **URL**: https://finance.telkomsigma.co.id/

      security:
        - bearerAuth: []
      responses:
        "204":
          description: Aplikasi Fintrack berhasil dihapus dari favorit
          headers:
            X-Removed-App:
              description: Nama aplikasi yang dihapus
              schema:
                type: string
                example: "Fintrack"
        "404":
          description: Aplikasi Fintrack tidak ditemukan dalam daftar favorit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi Fintrack tidak ditemukan dalam daftar favorit Anda."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat menghapus aplikasi dari favorit."

  /employees/favorites/campaignx/delete:
    delete:
      tags:
        - Favorite Apps
      summary: Menghapus aplikasi CampaignX dari favorit
      description: |
        Endpoint ini digunakan untuk menghapus aplikasi CampaignX dari daftar favorit milik user yang sedang login.

        **Aplikasi CampaignX:**
        - **Nama**: CampaignX
        - **Kode**: CX
        - **Deskripsi**: Aplikasi manajemen kampanye digital untuk sosial media dan analitik
        - **URL**: https://campaignx.telkomsigma.co.id/

      security:
        - bearerAuth: []
      responses:
        "204":
          description: Aplikasi CampaignX berhasil dihapus dari favorit
          headers:
            X-Removed-App:
              description: Nama aplikasi yang dihapus
              schema:
                type: string
                example: "CampaignX"
        "404":
          description: Aplikasi CampaignX tidak ditemukan dalam daftar favorit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi CampaignX tidak ditemukan dalam daftar favorit Anda."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat menghapus aplikasi dari favorit."

  /employees/favorites/sigpass/order:
    patch:
      tags:
        - Favorite Apps
      summary: Mengubah urutan aplikasi Sigpass dalam daftar favorit
      description: |
        Endpoint ini digunakan untuk mengubah urutan aplikasi Sigpass dalam daftar favorit user (drag-and-drop functionality).

        **Cara Kerja:**
        1. User melakukan drag-and-drop aplikasi Sigpass ke posisi baru
        2. Frontend mengirim posisi baru (new_order) ke endpoint ini
        3. Sistem mengupdate urutan aplikasi dalam daftar favorit
        4. Daftar favorit akan ditampilkan dengan urutan yang baru

        **Aplikasi Sigpass:**
        - **Nama**: Sigpass
        - **Platform**: HC Platform
        - **Kategori**: Human Resources (HR)

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - new_order
              properties:
                new_order:
                  type: integer
                  minimum: 1
                  maximum: 50
                  description: "Posisi baru aplikasi Sigpass dalam daftar favorit (1 = paling atas)"
                  example: 3
            examples:
              move_to_top:
                summary: Pindah ke posisi paling atas
                description: Memindahkan Sigpass ke urutan pertama
                value:
                  new_order: 1
              move_to_middle:
                summary: Pindah ke posisi tengah
                description: Memindahkan Sigpass ke urutan ketiga
                value:
                  new_order: 3
              move_to_bottom:
                summary: Pindah ke posisi bawah
                description: Memindahkan Sigpass ke urutan kelima
                value:
                  new_order: 5
      responses:
        "200":
          description: Urutan aplikasi Sigpass berhasil diperbarui
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: "Urutan aplikasi Sigpass berhasil diperbarui ke posisi 3."
                data:
                  app_name: "Sigpass"
                  old_order: 1
                  new_order: 3
                  total_favorites: 5
        "400":
          description: Posisi urutan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                invalid_order:
                  summary: Urutan tidak valid
                  value:
                    status: false
                    message: "Posisi urutan harus antara 1 dan jumlah aplikasi favorit."
                missing_order:
                  summary: new_order tidak ada
                  value:
                    status: false
                    message: "Field new_order wajib diisi."
        "404":
          description: Aplikasi Sigpass tidak ditemukan dalam favorit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi Sigpass tidak ditemukan dalam daftar favorit Anda."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengubah urutan aplikasi."

  /employees/favorites/mango/order:
    patch:
      tags:
        - Favorite Apps
      summary: Mengubah urutan aplikasi Mango dalam daftar favorit
      description: |
        Endpoint ini digunakan untuk mengubah urutan aplikasi Mango dalam daftar favorit user (drag-and-drop functionality).

        **Aplikasi Mango:**
        - **Nama**: Mango
        - **Platform**: HC Platform
        - **Kategori**: Human Resources (HR)
        - **Fungsi**: Manajemen karyawan, pengajuan cuti dan izin

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - new_order
              properties:
                new_order:
                  type: integer
                  minimum: 1
                  maximum: 50
                  description: "Posisi baru aplikasi Mango dalam daftar favorit"
                  example: 2
      responses:
        "200":
          description: Urutan aplikasi Mango berhasil diperbarui
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: "Urutan aplikasi Mango berhasil diperbarui ke posisi 2."
                data:
                  app_name: "Mango"
                  old_order: 4
                  new_order: 2
                  total_favorites: 6
        "400":
          description: Posisi urutan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Posisi urutan harus antara 1 dan jumlah aplikasi favorit."
        "404":
          description: Aplikasi Mango tidak ditemukan dalam favorit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi Mango tidak ditemukan dalam daftar favorit Anda."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengubah urutan aplikasi."

  /employees/favorites/campaignx/order:
    patch:
      tags:
        - Favorite Apps
      summary: Mengubah urutan aplikasi CampaignX dalam daftar favorit
      description: |
        Endpoint ini digunakan untuk mengubah urutan aplikasi CampaignX dalam daftar favorit user (drag-and-drop functionality).

        **Aplikasi CampaignX:**
        - **Nama**: CampaignX
        - **Platform**: Marketing Platform
        - **Kategori**: Digital Marketing
        - **Fungsi**: Manajemen kampanye digital dan analitik media sosial

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - new_order
              properties:
                new_order:
                  type: integer
                  minimum: 1
                  maximum: 50
                  description: "Posisi baru aplikasi CampaignX dalam daftar favorit"
                  example: 1
      responses:
        "200":
          description: Urutan aplikasi CampaignX berhasil diperbarui
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: "Urutan aplikasi CampaignX berhasil diperbarui ke posisi 1."
                data:
                  app_name: "CampaignX"
                  old_order: 3
                  new_order: 1
                  total_favorites: 4
        "400":
          description: Posisi urutan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Posisi urutan harus antara 1 dan jumlah aplikasi favorit."
        "404":
          description: Aplikasi CampaignX tidak ditemukan dalam favorit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi CampaignX tidak ditemukan dalam daftar favorit Anda."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengubah urutan aplikasi."

  /employees/favorites/slack/order:
    patch:
      tags:
        - Favorite Apps
      summary: Mengubah urutan aplikasi Slack dalam daftar favorit
      description: |
        Endpoint ini digunakan untuk mengubah urutan aplikasi Slack dalam daftar favorit user (drag-and-drop functionality).

        **Aplikasi Slack:**
        - **Nama**: Slack
        - **Platform**: Communication Platform
        - **Kategori**: Team Collaboration
        - **Fungsi**: Komunikasi tim, berbagi file, dan integrasi layanan kerja

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - new_order
              properties:
                new_order:
                  type: integer
                  minimum: 1
                  maximum: 50
                  description: "Posisi baru aplikasi Slack dalam daftar favorit"
                  example: 4
      responses:
        "200":
          description: Urutan aplikasi Slack berhasil diperbarui
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: "Urutan aplikasi Slack berhasil diperbarui ke posisi 4."
                data:
                  app_name: "Slack"
                  old_order: 2
                  new_order: 4
                  total_favorites: 7
        "400":
          description: Posisi urutan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Posisi urutan harus antara 1 dan jumlah aplikasi favorit."
        "404":
          description: Aplikasi Slack tidak ditemukan dalam favorit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi Slack tidak ditemukan dalam daftar favorit Anda."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengubah urutan aplikasi."

  /employees/favorites/fintrack/order:
    patch:
      tags:
        - Favorite Apps
      summary: Mengubah urutan aplikasi Fintrack dalam daftar favorit
      description: |
        Endpoint ini digunakan untuk mengubah urutan aplikasi Fintrack dalam daftar favorit user (drag-and-drop functionality).

        **Aplikasi Fintrack:**
        - **Nama**: Fintrack
        - **Platform**: Finance Platform
        - **Kategori**: Financial Management
        - **Fungsi**: Pelacakan pengeluaran, pemasukan, dan analisis keuangan real-time

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - new_order
              properties:
                new_order:
                  type: integer
                  minimum: 1
                  maximum: 50
                  description: "Posisi baru aplikasi Fintrack dalam daftar favorit"
                  example: 5
      responses:
        "200":
          description: Urutan aplikasi Fintrack berhasil diperbarui
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                status: true
                message: "Urutan aplikasi Fintrack berhasil diperbarui ke posisi 5."
                data:
                  app_name: "Fintrack"
                  old_order: 1
                  new_order: 5
                  total_favorites: 8
        "400":
          description: Posisi urutan tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Posisi urutan harus antara 1 dan jumlah aplikasi favorit."
        "404":
          description: Aplikasi Fintrack tidak ditemukan dalam favorit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi Fintrack tidak ditemukan dalam daftar favorit Anda."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengubah urutan aplikasi."

  /employees/favorites/categories/hr:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan aplikasi favorit kategori Human Resources (HR)
      description: |
        Endpoint ini digunakan untuk mengambil daftar aplikasi favorit dalam kategori Human Resources (HR).

        **Kategori Human Resources (HR):**
        - **Platform**: HC Platform
        - **Aplikasi**: Sigpass, Mango, E-Learning Sigma
        - **Fungsi**: Autentikasi, manajemen karyawan, pembelajaran internal

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Daftar aplikasi favorit kategori HR berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Data aplikasi favorit kategori Human Resources berhasil diambil."
                  data:
                    type: object
                    properties:
                      category:
                        type: string
                        example: "Human Resources (HR)"
                      platform:
                        type: string
                        example: "HC Platform"
                      apps:
                        type: array
                        items:
                          type: object
                          properties:
                            app_id:
                              type: integer
                            name:
                              type: string
                            code:
                              type: string
                            description:
                              type: string
                            url:
                              type: string
                            icon:
                              type: string
                            is_favorite:
                              type: boolean
                        example:
                          - app_id: 2
                            name: "Sigpass"
                            code: "SG"
                            description: "Aplikasi autentikasi Single Sign-On (SSO) untuk mengakses berbagai layanan internal Telkomsigma."
                            url: "https://sigpass-sso.telkomsigma.co.id/"
                            icon: "https://cdn-icons-png.flaticon.com/512/3064/3064197.png"
                            is_favorite: true
                          - app_id: 3
                            name: "Mango"
                            code: "SA"
                            description: "Aplikasi manajemen karyawan untuk pengajuan cuti, izin, dan pengelolaan data karyawan."
                            url: "https://www.xl.co.id/"
                            icon: "https://cdn-icons-png.flaticon.com/512/1077/1077012.png"
                            is_favorite: false
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil data aplikasi favorit."

  /employees/favorites/categories/it:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan aplikasi favorit kategori IT Services
      description: |
        Endpoint ini digunakan untuk mengambil daftar aplikasi favorit dalam kategori IT Services.

        **Kategori IT Services:**
        - **Platform**: IT Platform
        - **Aplikasi**: Slack, Jira, GitLab
        - **Fungsi**: Kolaborasi tim, manajemen proyek, version control

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Daftar aplikasi favorit kategori IT berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Data aplikasi favorit kategori IT Services berhasil diambil."
                  data:
                    type: object
                    properties:
                      category:
                        type: string
                        example: "IT Services"
                      platform:
                        type: string
                        example: "IT Platform"
                      apps:
                        type: array
                        items:
                          type: object
                          properties:
                            app_id:
                              type: integer
                            name:
                              type: string
                            code:
                              type: string
                            description:
                              type: string
                            url:
                              type: string
                            icon:
                              type: string
                            is_favorite:
                              type: boolean
                        example:
                          - app_id: 10
                            name: "Slack"
                            code: "SL"
                            description: "Platform kolaborasi tim untuk komunikasi, berbagi file, dan integrasi dengan berbagai layanan kerja."
                            url: "https://slack.com/"
                            icon: "https://cdn-icons-png.flaticon.com/512/2111/2111615.png"
                            is_favorite: true
                          - app_id: 11
                            name: "Jira"
                            code: "JR"
                            description: "Aplikasi manajemen proyek dan pelacakan tugas untuk tim pengembangan IT."
                            url: "https://www.atlassian.com/software/jira"
                            icon: "https://cdn-icons-png.flaticon.com/512/5968/5968892.png"
                            is_favorite: false
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil data aplikasi favorit."

  /employees/favorites/categories/financial:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan aplikasi favorit kategori Financial Management
      description: |
        Endpoint ini digunakan untuk mengambil daftar aplikasi favorit dalam kategori Financial Management.

        **Kategori Financial Management:**
        - **Platform**: Finance Platform
        - **Aplikasi**: Fintrack, Expense Portal
        - **Fungsi**: Pelacakan keuangan, pengajuan reimburse

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Daftar aplikasi favorit kategori Financial berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Data aplikasi favorit kategori Financial Management berhasil diambil."
                  data:
                    type: object
                    properties:
                      category:
                        type: string
                        example: "Financial Management"
                      platform:
                        type: string
                        example: "Finance Platform"
                      apps:
                        type: array
                        items:
                          type: object
                          properties:
                            app_id:
                              type: integer
                            name:
                              type: string
                            code:
                              type: string
                            description:
                              type: string
                            url:
                              type: string
                            icon:
                              type: string
                            is_favorite:
                              type: boolean
                        example:
                          - app_id: 20
                            name: "Fintrack"
                            code: "FT"
                            description: "Aplikasi pelacakan pengeluaran dan pemasukan perusahaan secara real-time"
                            url: "https://finance.telkomsigma.co.id/"
                            icon: "https://cdn-icons-png.flaticon.com/512/2165/2165701.png"
                            is_favorite: true
                          - app_id: 21
                            name: "Expense Portal"
                            code: "EP"
                            description: "Portal pengajuan dan verifikasi reimburse biaya operasional dan perjalanan dinas."
                            url: "https://expense.telkomsigma.co.id/"
                            icon: "https://cdn-icons-png.flaticon.com/512/1086/1086741.png"
                            is_favorite: false
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil data aplikasi favorit."

  /employees/favorites/categories/marketing:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan aplikasi favorit kategori Digital Marketing
      description: |
        Endpoint ini digunakan untuk mengambil daftar aplikasi favorit dalam kategori Digital Marketing.

        **Kategori Digital Marketing:**
        - **Platform**: Marketing Platform
        - **Aplikasi**: CampaignX, Survey Engine
        - **Fungsi**: Manajemen kampanye, analisis survei

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Daftar aplikasi favorit kategori Marketing berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Data aplikasi favorit kategori Digital Marketing berhasil diambil."
                  data:
                    type: object
                    properties:
                      category:
                        type: string
                        example: "Digital Marketing"
                      platform:
                        type: string
                        example: "Marketing Platform"
                      apps:
                        type: array
                        items:
                          type: object
                          properties:
                            app_id:
                              type: integer
                            name:
                              type: string
                            code:
                              type: string
                            description:
                              type: string
                            url:
                              type: string
                            icon:
                              type: string
                            is_favorite:
                              type: boolean
                        example:
                          - app_id: 30
                            name: "CampaignX"
                            code: "CX"
                            description: "Aplikasi manajemen kampanye digital untuk sosial media dan analitik"
                            url: "https://campaignx.telkomsigma.co.id/"
                            icon: "https://cdn-icons-png.flaticon.com/512/190/190411.png"
                            is_favorite: true
                          - app_id: 31
                            name: "Survey Engine"
                            code: "SE"
                            description: "Platform untuk membuat dan menganalisis survei pelanggan dan kepuasan layanan."
                            url: "https://survey.telkomsigma.co.id/"
                            icon: "https://cdn-icons-png.flaticon.com/512/929/929426.png"
                            is_favorite: false
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil data aplikasi favorit."

  /employees/favorites/sigpass:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan detail aplikasi Sigpass
      description: |
        Endpoint ini digunakan untuk mengambil detail lengkap aplikasi Sigpass termasuk status favorit user.

        **Aplikasi Sigpass:**
        - **ID**: 2
        - **Nama**: Sigpass
        - **Kode**: SG
        - **Platform**: HC Platform
        - **Kategori**: Human Resources (HR)
        - **Fungsi**: Aplikasi autentikasi Single Sign-On (SSO) untuk mengakses berbagai layanan internal Telkomsigma

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Detail aplikasi Sigpass berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Detail aplikasi Sigpass berhasil diambil."
                  data:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: "Sigpass"
                      code:
                        type: string
                        example: "SG"
                      description:
                        type: string
                        example: "Aplikasi autentikasi Single Sign-On (SSO) untuk mengakses berbagai layanan internal Telkomsigma."
                      url:
                        type: string
                        example: "https://sigpass-sso.telkomsigma.co.id/"
                      icon:
                        type: string
                        example: "https://cdn-icons-png.flaticon.com/512/3064/3064197.png"
                      platform:
                        type: string
                        example: "HC Platform"
                      category:
                        type: string
                        example: "Human Resources (HR)"
                      is_favorite:
                        type: boolean
                        example: true
                      favorite_order:
                        type: integer
                        example: 1
                        description: "Urutan dalam daftar favorit user (null jika bukan favorit)"
                      last_accessed:
                        type: string
                        format: date-time
                        example: "2025-07-30T10:15:30Z"
                        description: "Waktu terakhir user mengakses aplikasi ini"
        "404":
          description: Aplikasi Sigpass tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi Sigpass tidak ditemukan."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil detail aplikasi."

  /employees/favorites/mango:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan detail aplikasi Mango
      description: |
        Endpoint ini digunakan untuk mengambil detail lengkap aplikasi Mango termasuk status favorit user.

        **Aplikasi Mango:**
        - **ID**: 3
        - **Nama**: Mango
        - **Kode**: SA
        - **Platform**: HC Platform
        - **Kategori**: Human Resources (HR)
        - **Fungsi**: Aplikasi manajemen karyawan untuk pengajuan cuti, izin, dan pengelolaan data karyawan

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Detail aplikasi Mango berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Detail aplikasi Mango berhasil diambil."
                  data:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: "Mango"
                      code:
                        type: string
                        example: "SA"
                      description:
                        type: string
                        example: "Aplikasi manajemen karyawan untuk pengajuan cuti, izin, dan pengelolaan data karyawan."
                      url:
                        type: string
                        example: "https://www.xl.co.id/"
                      icon:
                        type: string
                        example: "https://cdn-icons-png.flaticon.com/512/1077/1077012.png"
                      platform:
                        type: string
                        example: "HC Platform"
                      category:
                        type: string
                        example: "Human Resources (HR)"
                      is_favorite:
                        type: boolean
                        example: false
                      favorite_order:
                        type: integer
                        example: null
                        description: "Urutan dalam daftar favorit user (null jika bukan favorit)"
                      last_accessed:
                        type: string
                        format: date-time
                        example: "2025-07-29T14:22:15Z"
                        description: "Waktu terakhir user mengakses aplikasi ini"
        "404":
          description: Aplikasi Mango tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi Mango tidak ditemukan."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil detail aplikasi."

  /employees/favorites/elearning:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan detail aplikasi E-Learning Sigma
      description: |
        Endpoint ini digunakan untuk mengambil detail lengkap aplikasi E-Learning Sigma termasuk status favorit user.

        **Aplikasi E-Learning Sigma:**
        - **ID**: 4
        - **Nama**: E-Learning Sigma
        - **Kode**: EL
        - **Platform**: HC Platform
        - **Kategori**: Human Resources (HR)
        - **Fungsi**: Platform pembelajaran internal untuk pelatihan, sertifikasi, dan peningkatan kompetensi karyawan

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Detail aplikasi E-Learning Sigma berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Detail aplikasi E-Learning Sigma berhasil diambil."
                  data:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        example: 4
                      name:
                        type: string
                        example: "E-Learning Sigma"
                      code:
                        type: string
                        example: "EL"
                      description:
                        type: string
                        example: "Platform pembelajaran internal untuk pelatihan, sertifikasi, dan peningkatan kompetensi karyawan."
                      url:
                        type: string
                        example: "https://elearning.telkomsigma.co.id/"
                      icon:
                        type: string
                        example: "https://cdn-icons-png.flaticon.com/512/3135/3135715.png"
                      platform:
                        type: string
                        example: "HC Platform"
                      category:
                        type: string
                        example: "Human Resources (HR)"
                      is_favorite:
                        type: boolean
                        example: false
                      favorite_order:
                        type: integer
                        example: null
                        description: "Urutan dalam daftar favorit user (null jika bukan favorit)"
                      last_accessed:
                        type: string
                        format: date-time
                        example: "2025-07-28T09:45:30Z"
                        description: "Waktu terakhir user mengakses aplikasi ini"
        "404":
          description: Aplikasi E-Learning Sigma tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi E-Learning Sigma tidak ditemukan."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil detail aplikasi."

  /employees/favorites/slack:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan detail aplikasi Slack
      description: |
        Endpoint ini digunakan untuk mengambil detail lengkap aplikasi Slack termasuk status favorit user.

        **Aplikasi Slack:**
        - **ID**: 10
        - **Nama**: Slack
        - **Kode**: SL
        - **Platform**: IT Platform
        - **Kategori**: IT Services
        - **Fungsi**: Platform kolaborasi tim untuk komunikasi, berbagi file, dan integrasi dengan berbagai layanan kerja

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Detail aplikasi Slack berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Detail aplikasi Slack berhasil diambil."
                  data:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        example: 10
                      name:
                        type: string
                        example: "Slack"
                      code:
                        type: string
                        example: "SL"
                      description:
                        type: string
                        example: "Platform kolaborasi tim untuk komunikasi, berbagi file, dan integrasi dengan berbagai layanan kerja."
                      url:
                        type: string
                        example: "https://slack.com/"
                      icon:
                        type: string
                        example: "https://cdn-icons-png.flaticon.com/512/2111/2111615.png"
                      platform:
                        type: string
                        example: "IT Platform"
                      category:
                        type: string
                        example: "IT Services"
                      is_favorite:
                        type: boolean
                        example: true
                      favorite_order:
                        type: integer
                        example: 2
                        description: "Urutan dalam daftar favorit user (null jika bukan favorit)"
                      last_accessed:
                        type: string
                        format: date-time
                        example: "2025-07-30T11:30:45Z"
                        description: "Waktu terakhir user mengakses aplikasi ini"
        "404":
          description: Aplikasi Slack tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi Slack tidak ditemukan."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil detail aplikasi."

  /employees/favorites/fintrack:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan detail aplikasi Fintrack
      description: |
        Endpoint ini digunakan untuk mengambil detail lengkap aplikasi Fintrack termasuk status favorit user.

        **Aplikasi Fintrack:**
        - **ID**: 20
        - **Nama**: Fintrack
        - **Kode**: FT
        - **Platform**: Finance Platform
        - **Kategori**: Financial Management
        - **Fungsi**: Aplikasi pelacakan pengeluaran dan pemasukan perusahaan secara real-time

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Detail aplikasi Fintrack berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Detail aplikasi Fintrack berhasil diambil."
                  data:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        example: 20
                      name:
                        type: string
                        example: "Fintrack"
                      code:
                        type: string
                        example: "FT"
                      description:
                        type: string
                        example: "Aplikasi pelacakan pengeluaran dan pemasukan perusahaan secara real-time"
                      url:
                        type: string
                        example: "https://finance.telkomsigma.co.id/"
                      icon:
                        type: string
                        example: "https://cdn-icons-png.flaticon.com/512/2165/2165701.png"
                      platform:
                        type: string
                        example: "Finance Platform"
                      category:
                        type: string
                        example: "Financial Management"
                      is_favorite:
                        type: boolean
                        example: false
                      favorite_order:
                        type: integer
                        example: null
                        description: "Urutan dalam daftar favorit user (null jika bukan favorit)"
                      last_accessed:
                        type: string
                        format: date-time
                        example: "2025-07-25T16:20:12Z"
                        description: "Waktu terakhir user mengakses aplikasi ini"
        "404":
          description: Aplikasi Fintrack tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi Fintrack tidak ditemukan."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil detail aplikasi."

  /employees/favorites/campaignx:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan detail aplikasi CampaignX
      description: |
        Endpoint ini digunakan untuk mengambil detail lengkap aplikasi CampaignX termasuk status favorit user.

        **Aplikasi CampaignX:**
        - **ID**: 30
        - **Nama**: CampaignX
        - **Kode**: CX
        - **Platform**: Marketing Platform
        - **Kategori**: Digital Marketing
        - **Fungsi**: Aplikasi manajemen kampanye digital untuk sosial media dan analitik

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Detail aplikasi CampaignX berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Detail aplikasi CampaignX berhasil diambil."
                  data:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        example: 30
                      name:
                        type: string
                        example: "CampaignX"
                      code:
                        type: string
                        example: "CX"
                      description:
                        type: string
                        example: "Aplikasi manajemen kampanye digital untuk sosial media dan analitik"
                      url:
                        type: string
                        example: "https://campaignx.telkomsigma.co.id/"
                      icon:
                        type: string
                        example: "https://cdn-icons-png.flaticon.com/512/190/190411.png"
                      platform:
                        type: string
                        example: "Marketing Platform"
                      category:
                        type: string
                        example: "Digital Marketing"
                      is_favorite:
                        type: boolean
                        example: true
                      favorite_order:
                        type: integer
                        example: 3
                        description: "Urutan dalam daftar favorit user (null jika bukan favorit)"
                      last_accessed:
                        type: string
                        format: date-time
                        example: "2025-07-30T08:15:22Z"
                        description: "Waktu terakhir user mengakses aplikasi ini"
        "404":
          description: Aplikasi CampaignX tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi CampaignX tidak ditemukan."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil detail aplikasi."

  /employees/favorites/app/2:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan detail aplikasi berdasarkan ID 2 (Sigpass)
      description: |
        Endpoint ini digunakan untuk mengambil detail aplikasi berdasarkan app_id = 2 (Sigpass).
        Alternatif dari endpoint `/employees/favorites/sigpass` menggunakan ID numerik.

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Detail aplikasi dengan ID 2 berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Detail aplikasi dengan ID 2 berhasil diambil."
                  data:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: "Sigpass"
                      code:
                        type: string
                        example: "SG"
                      description:
                        type: string
                        example: "Aplikasi autentikasi Single Sign-On (SSO) untuk mengakses berbagai layanan internal Telkomsigma."
                      url:
                        type: string
                        example: "https://sigpass-sso.telkomsigma.co.id/"
                      icon:
                        type: string
                        example: "https://cdn-icons-png.flaticon.com/512/3064/3064197.png"
                      platform:
                        type: string
                        example: "HC Platform"
                      category:
                        type: string
                        example: "Human Resources (HR)"
                      is_favorite:
                        type: boolean
                        example: true
                      favorite_order:
                        type: integer
                        example: 1
        "404":
          description: Aplikasi dengan ID 2 tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi dengan ID 2 tidak ditemukan."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil detail aplikasi."

  /employees/favorites/app/3:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan detail aplikasi berdasarkan ID 3 (Mango)
      description: |
        Endpoint ini digunakan untuk mengambil detail aplikasi berdasarkan app_id = 3 (Mango).
        Alternatif dari endpoint `/employees/favorites/mango` menggunakan ID numerik.

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Detail aplikasi dengan ID 3 berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Detail aplikasi dengan ID 3 berhasil diambil."
                  data:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: "Mango"
                      code:
                        type: string
                        example: "SA"
                      description:
                        type: string
                        example: "Aplikasi manajemen karyawan untuk pengajuan cuti, izin, dan pengelolaan data karyawan."
                      url:
                        type: string
                        example: "https://www.xl.co.id/"
                      icon:
                        type: string
                        example: "https://cdn-icons-png.flaticon.com/512/1077/1077012.png"
                      platform:
                        type: string
                        example: "HC Platform"
                      category:
                        type: string
                        example: "Human Resources (HR)"
                      is_favorite:
                        type: boolean
                        example: false
                      favorite_order:
                        type: integer
                        example: null
        "404":
          description: Aplikasi dengan ID 3 tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi dengan ID 3 tidak ditemukan."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil detail aplikasi."

  /employees/favorites/app/4:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan detail aplikasi berdasarkan ID 4 (E-Learning Sigma)
      description: |
        Endpoint ini digunakan untuk mengambil detail aplikasi berdasarkan app_id = 4 (E-Learning Sigma).
        Alternatif dari endpoint `/employees/favorites/elearning` menggunakan ID numerik.

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Detail aplikasi dengan ID 4 berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Detail aplikasi dengan ID 4 berhasil diambil."
                  data:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        example: 4
                      name:
                        type: string
                        example: "E-Learning Sigma"
                      code:
                        type: string
                        example: "EL"
                      description:
                        type: string
                        example: "Platform pembelajaran internal untuk pelatihan, sertifikasi, dan peningkatan kompetensi karyawan."
                      url:
                        type: string
                        example: "https://elearning.telkomsigma.co.id/"
                      icon:
                        type: string
                        example: "https://cdn-icons-png.flaticon.com/512/3135/3135715.png"
                      platform:
                        type: string
                        example: "HC Platform"
                      category:
                        type: string
                        example: "Human Resources (HR)"
                      is_favorite:
                        type: boolean
                        example: false
                      favorite_order:
                        type: integer
                        example: null
        "404":
          description: Aplikasi dengan ID 4 tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi dengan ID 4 tidak ditemukan."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil detail aplikasi."

  /employees/favorites/app/10:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan detail aplikasi berdasarkan ID 10 (Slack)
      description: |
        Endpoint ini digunakan untuk mengambil detail aplikasi berdasarkan app_id = 10 (Slack).
        Alternatif dari endpoint `/employees/favorites/slack` menggunakan ID numerik.

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Detail aplikasi dengan ID 10 berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Detail aplikasi dengan ID 10 berhasil diambil."
                  data:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        example: 10
                      name:
                        type: string
                        example: "Slack"
                      code:
                        type: string
                        example: "SL"
                      description:
                        type: string
                        example: "Platform kolaborasi tim untuk komunikasi, berbagi file, dan integrasi dengan berbagai layanan kerja."
                      url:
                        type: string
                        example: "https://slack.com/"
                      icon:
                        type: string
                        example: "https://cdn-icons-png.flaticon.com/512/2111/2111615.png"
                      platform:
                        type: string
                        example: "IT Platform"
                      category:
                        type: string
                        example: "IT Services"
                      is_favorite:
                        type: boolean
                        example: true
                      favorite_order:
                        type: integer
                        example: 2
        "404":
          description: Aplikasi dengan ID 10 tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi dengan ID 10 tidak ditemukan."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil detail aplikasi."

  /employees/favorites/app/20:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan detail aplikasi berdasarkan ID 20 (Fintrack)
      description: |
        Endpoint ini digunakan untuk mengambil detail aplikasi berdasarkan app_id = 20 (Fintrack).
        Alternatif dari endpoint `/employees/favorites/fintrack` menggunakan ID numerik.

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Detail aplikasi dengan ID 20 berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Detail aplikasi dengan ID 20 berhasil diambil."
                  data:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        example: 20
                      name:
                        type: string
                        example: "Fintrack"
                      code:
                        type: string
                        example: "FT"
                      description:
                        type: string
                        example: "Aplikasi pelacakan pengeluaran dan pemasukan perusahaan secara real-time"
                      url:
                        type: string
                        example: "https://finance.telkomsigma.co.id/"
                      icon:
                        type: string
                        example: "https://cdn-icons-png.flaticon.com/512/2165/2165701.png"
                      platform:
                        type: string
                        example: "Finance Platform"
                      category:
                        type: string
                        example: "Financial Management"
                      is_favorite:
                        type: boolean
                        example: false
                      favorite_order:
                        type: integer
                        example: null
        "404":
          description: Aplikasi dengan ID 20 tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi dengan ID 20 tidak ditemukan."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil detail aplikasi."

  /employees/favorites/app/30:
    get:
      tags:
        - Favorite Apps
      summary: Mendapatkan detail aplikasi berdasarkan ID 30 (CampaignX)
      description: |
        Endpoint ini digunakan untuk mengambil detail aplikasi berdasarkan app_id = 30 (CampaignX).
        Alternatif dari endpoint `/employees/favorites/campaignx` menggunakan ID numerik.

      security:
        - bearerAuth: []
      responses:
        "200":
          description: Detail aplikasi dengan ID 30 berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Detail aplikasi dengan ID 30 berhasil diambil."
                  data:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        example: 30
                      name:
                        type: string
                        example: "CampaignX"
                      code:
                        type: string
                        example: "CX"
                      description:
                        type: string
                        example: "Aplikasi manajemen kampanye digital untuk sosial media dan analitik"
                      url:
                        type: string
                        example: "https://campaignx.telkomsigma.co.id/"
                      icon:
                        type: string
                        example: "https://cdn-icons-png.flaticon.com/512/190/190411.png"
                      platform:
                        type: string
                        example: "Marketing Platform"
                      category:
                        type: string
                        example: "Digital Marketing"
                      is_favorite:
                        type: boolean
                        example: true
                      favorite_order:
                        type: integer
                        example: 3
        "404":
          description: Aplikasi dengan ID 30 tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Aplikasi dengan ID 30 tidak ditemukan."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Terjadi kesalahan saat mengambil detail aplikasi."
  /employees/export:
    post:
      tags:
        - Export
      summary: Mengexport data personal dalam format PDF
      description: |
        Endpoint ini digunakan untuk mengekspor data personal karyawan dalam format PDF berdasarkan pilihan user.

        **Cara Penggunaan:**
        1. User memilih bagian data yang ingin diekspor melalui checkbox/list
        2. Frontend mengirim array `data_types` berisi pilihan user
        3. Backend menggenerate PDF berisi hanya data yang dipilih
        4. PDF otomatis ter-download dengan nama file yang deskriptif

        **Jenis Data yang Dapat Diekspor:**
        - **Basic Information**: Nama, NIK, tempat/tanggal lahir, jenis kelamin, agama, status perkawinan
        - **Address**: Alamat sesuai KTP dan alamat domisili saat ini
        - **Emergency Contact**: Kontak darurat yang dapat dihubungi
        - **Account**: Informasi rekening payroll dan NPWP
        - **Family**: Data anggota keluarga dan hubungan
        - **Education**: Riwayat pendidikan formal
        - **Assignment**: Penugasan dan status kepegawaian
        - **Employment**: Posisi dan informasi pekerjaan saat ini
        - **Photo & Documents**: Pasfoto dan dokumen-dokumen pendukung

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data_types
              properties:
                data_types:
                  type: array
                  items:
                    type: string
                    enum:
                      - Basic Information
                      - Address
                      - Emergency Contact
                      - Account
                      - Family
                      - Education
                      - Social Security
                      - Medical
                      - Employment
                  minItems: 1
                  maxItems: 9
                  description: "Daftar jenis data personal yang ingin diekspor dalam PDF"
                  example: ["Basic Information", "Address", "Family"]
                include_documents:
                  type: boolean
                  description: "Apakah ingin menyertakan foto dokumen pendukung dalam PDF"
                  default: false
                  example: false
                file_format:
                  type: string
                  enum: ["pdf"]
                  description: "Format file export (saat ini hanya mendukung PDF)"
                  default: "pdf"
                  example: "pdf"
            examples:
              minimal_export:
                summary: Export data minimal
                description: Contoh export hanya informasi dasar dan alamat
                value:
                  data_types: ["Basic Information", "Address"]
                  include_documents: false
                  file_format: "pdf"
              complete_export:
                summary: Export data lengkap
                description: Contoh export semua data personal
                value:
                  data_types:
                    [
                      "Basic Information",
                      "Address",
                      "Emergency Contact",
                      "Account",
                      "Family",
                      "Education",
                      "Social Security",
                      "Medical",
                      "Employment",
                    ]
                  include_documents: true
                  file_format: "pdf"
              family_focused:
                summary: Export data keluarga
                description: Contoh export fokus pada data keluarga dan kontak
                value:
                  data_types:
                    ["Basic Information", "Family", "Emergency Contact"]
                  include_documents: false
                  file_format: "pdf"
      responses:
        "200":
          description: File PDF berhasil digenerate dan siap diunduh
          content:
            application/pdf:
              schema:
                type: string
                format: binary
                description: "File PDF yang berisi data personal sesuai pilihan user"
          headers:
            Content-Disposition:
              description: "Header untuk download file dengan nama yang deskriptif"
              schema:
                type: string
                example: 'attachment; filename="Employee_Export_Sarah_Wijaya_30-07-2025.pdf"'
            Content-Type:
              description: "Tipe konten file"
              schema:
                type: string
                example: "application/pdf"
            Content-Length:
              description: "Ukuran file dalam bytes"
              schema:
                type: integer
                example: 2048576
        "400":
          description: Request tidak valid atau data_types kosong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                empty_data_types:
                  summary: Data types kosong
                  value:
                    status: false
                    message: "data_types tidak boleh kosong. Pilih minimal 1 jenis data untuk diekspor."
                invalid_data_type:
                  summary: Jenis data tidak valid
                  value:
                    status: false
                    message: "Jenis data 'Invalid Type' tidak dikenali. Pilih dari daftar yang tersedia."
                too_many_types:
                  summary: Terlalu banyak pilihan
                  value:
                    status: false
                    message: "Maksimal 9 jenis data dapat dipilih untuk diekspor."
        "401":
          description: Token tidak valid atau tidak tersedia
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Token tidak valid atau tidak ditemukan."
        "404":
          description: Data karyawan tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: "Data karyawan tidak ditemukan untuk ID yang diberikan."
        "500":
          description: Terjadi kesalahan pada server saat generate PDF
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                pdf_generation_error:
                  summary: Error saat generate PDF
                  value:
                    status: false
                    message: "Terjadi kesalahan saat membuat file PDF. Silakan coba lagi."
                server_error:
                  summary: Server error umum
                  value:
                    status: false
                    message: "Terjadi kesalahan pada server."

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout user dan mengakhiri session
      description: |
        Endpoint ini digunakan untuk melakukan proses logout user yang sedang login dan mengakhiri seluruh session aktif. Setelah logout, access_token dan refresh_token tidak dapat digunakan lagi.
        Endpoint ini digunakan untuk mengamankan aplikasi dengan memastikan user benar-benar keluar dari sistem.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Berhasil logout.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successfully logged out."
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid atau tidak ditemukan.

  /employees/dashboard:
    get:
      tags:
        - Dashboard
      summary: Mendapatkan data dashboard (info user, favorites, apps by platform, categories)
      description: |
        Endpoint ini digunakan untuk mengambil data utama dashboard setelah login, meliputi:
        - Daftar aplikasi favorit user (favorites)
        - Daftar aplikasi yang dikelompokkan berdasarkan platform dan kategori (apps)
        - Daftar kategori aplikasi (categories)
        Semua data ini digunakan untuk menampilkan tampilan utama dashboard ESS.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Data berhasil diambil.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppsByPlatform"
              example:
                status: true
                message: Data berhasil diambil.
                data:
                  smart_access:
                    - name: "Slack"
                      url: "https://www.telkomsel.com/"
                      icon: "https://lokerbumn.com/wp-content/uploads/2024/07/Telkomsel-02.jpg" # opsional
                    - name: "Other App"
                      url: "https://ioh.co.id/portal/en/iohindex"
                      icon: "https://mgmall.s3.amazonaws.com/img/112023/ad45bc14558e6b97553029e7781dfceee7ad79c2.jpg"
                  apps:
                    HC Platform:
                      Human Resources (HR):
                        - app_id: 2
                          name: Sigpass
                          code: SG
                          description: Aplikasi autentikasi Single Sign-On (SSO) untuk mengakses berbagai layanan internal Telkomsigma.
                          url: "https://sigpass-sso.telkomsigma.co.id/"
                          icon: "https://cdn-icons-png.flaticon.com/512/3064/3064197.png"
                          is_favorite: false

                        - app_id: 3
                          name: Mango
                          code: SA
                          description: Aplikasi manajemen karyawan untuk pengajuan cuti, izin, dan pengelolaan data karyawan.
                          url: https://www.xl.co.id/
                          icon: "https://cdn-icons-png.flaticon.com/512/1077/1077012.png"
                          is_favorite: true

                        - app_id: 4
                          name: E-Learning Sigma
                          code: EL
                          description: Platform pembelajaran internal untuk pelatihan, sertifikasi, dan peningkatan kompetensi karyawan.
                          url: https://elearning.telkomsigma.co.id/
                          icon: "https://cdn-icons-png.flaticon.com/512/3135/3135715.png"
                          is_favorite: false

                    IT Platform:
                      IT Services:
                        - app_id: 10
                          name: Slack
                          code: SL
                          description: Platform kolaborasi tim untuk komunikasi, berbagi file, dan integrasi dengan berbagai layanan kerja.
                          url: https://slack.com/
                          icon: "https://cdn-icons-png.flaticon.com/512/2111/2111615.png"
                          is_favorite: false

                        - app_id: 11
                          name: Jira
                          code: JR
                          description: Aplikasi manajemen proyek dan pelacakan tugas untuk tim pengembangan IT.
                          url: https://www.atlassian.com/software/jira
                          icon: "https://cdn-icons-png.flaticon.com/512/5968/5968892.png"
                          is_favorite: true

                        - app_id: 12
                          name: GitLab
                          code: GL
                          description: Platform DevOps untuk version control, CI/CD pipeline, dan kolaborasi pengembangan perangkat lunak.
                          url: https://gitlab.com/
                          icon: "https://cdn-icons-png.flaticon.com/512/919/919831.png"
                          is_favorite: false

                    Finance Platform:
                      Financial Management:
                        - app_id: 20
                          name: Fintrack
                          code: FT
                          description: Aplikasi pelacakan pengeluaran dan pemasukan perusahaan secara real-time
                          url: https://finance.telkomsigma.co.id/
                          icon: "https://cdn-icons-png.flaticon.com/512/2165/2165701.png"
                          is_favorite: false

                        - app_id: 21
                          name: Expense Portal
                          code: EP
                          description: Portal pengajuan dan verifikasi reimburse biaya operasional dan perjalanan dinas.
                          url: https://expense.telkomsigma.co.id/
                          icon: "https://cdn-icons-png.flaticon.com/512/1086/1086741.png"
                          is_favorite: true

                    Marketing Platform:
                      Digital Marketing:
                        - app_id: 30
                          name: CampaignX
                          code: CX
                          description: Aplikasi manajemen kampanye digital untuk sosial media dan analitik
                          url: https://campaignx.telkomsigma.co.id/
                          icon: "https://cdn-icons-png.flaticon.com/512/190/190411.png"
                          is_favorite: false

                        - app_id: 31
                          name: Survey Engine
                          code: SE
                          description: Platform untuk membuat dan menganalisis survei pelanggan dan kepuasan layanan.
                          url: https://survey.telkomsigma.co.id/
                          icon: "https://cdn-icons-png.flaticon.com/512/929/929426.png"
                          is_favorite: false

        "401":
          description: Token tidak valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Token tidak valid.
        "500":
          description: Gagal ambil data.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: false
                message: Gagal ambil data.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: User email address
          example: example.employee@sigma.co.id
        password:
          type: string
          format: password
          description: User password
          example: Secret
          minLength: 1
    LoginResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        messages:
          type: string
          example: your data is available
        data:
          type: object
          required: [employee_id, employee_name, email, token]
          properties:
            employee_id:
              type: string
              example: S0242422
            employee_name:
              type: string
              example: Sarah Wijaya
            email:
              type: string
              format: email
              example: example.employee@sigma.co.id
            employee_level:
              type: string
              example: OFFICER
            employee_position:
              type: string
              example: OFFICER IT DEVELOPMENT AND ACQUISITION
            unit:
              type: string
              example: Corporate Information System and Security
            organization:
              type: string
              example: IT Development and Acquisition
            spv_id:
              type: string
              example: S20250236
            spv_name:
              type: string
              example: EXAMPLE SUPERVISOR
            company_code:
              type: string
              example: SCC
            authenticator:
              type: string
              example: ACTIVE DIRECTORY
        token:
          type: object
          properties:
            access_token:
              type: string
              description: Token autentikasi JWT atau sejenis
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            refresh_token:
              type: string
              description: Token autentikasi JWT atau sejenis
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    EmployeeProfile:
      type: object
      properties:
        employee_name:
          type: string
          minLength: 2
          maxLength: 100
          pattern: '^[a-zA-Z\s\.]+$'
          example: Sarah Wijaya
          description: Nama lengkap karyawan
        email:
          type: string
          format: email
          maxLength: 255
          example: example.employee@sigma.co.id
          description: Alamat email karyawan
        company:
          type: string
          minLength: 2
          maxLength: 200
          example: PT SIGMA CIPTA CARAKA
          description: Nama perusahaan tempat karyawan bekerja
        company_address:
          type: string
          minLength: 10
          maxLength: 500
          example: Jl. Telekomunikasi No.1, Bandung
          description: Alamat kantor perusahaan
        phone_number:
          type: string
          pattern: '^(\+62|62|0)8[1-9][0-9]{6,9}$'
          example: 08123456789
          description: Nomor telepon karyawan (format Indonesia)
        photo_profile_ess:
          type: string
          format: uri
          maxLength: 2048
          example: https://www.purina.co.id/sites/default/files/2023-01/15%20Nama%20Kucing%20Jantan%20dan%20Artinya%20copy.jpg
          description: URL foto profil ESS
    ErrorResponse:
      type: object
      required:
        - status
        - messages
      properties:
        status:
          type: boolean
          example: false
        messages:
          oneOf:
            - type: string
              example: "incorrect username or password"
            - type: object
              properties:
                email:
                  type: array
                  items:
                    type: string
                  example:
                    [
                      "The email field must be a valid email address.",
                      "The email field format is invalid.",
                    ]
    MessageOnlyErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: "Unauthenticated."
    UpdateProfilePhoto:
      type: object
      required:
        - photo_profile_ess
      properties:
        photo_profile_ess:
          type: string
          format: uri
          maxLength: 2048
          example: https://www.purina.co.id/sites/default/files/2023-01/15%20Nama%20Kucing%20Jantan%20dan%20Artinya%20copy.jpg
          description: URL foto profil ESS

    FileUpload:
      type: object
      properties:
        file:
          type: string
          format: binary
          description: |
            File to upload. Supported formats: JPG, JPEG, PNG, PDF
            Maximum size: 5MB
            Recommended image resolution: 300x300px minimum for profile photos
        metadata:
          type: object
          properties:
            filename:
              type: string
              maxLength: 255
              description: Original filename
            filesize:
              type: integer
              maximum: 5242880
              description: File size in bytes (max 5MB)
            mimetype:
              type: string
              enum: ["image/jpeg", "image/jpg", "image/png", "application/pdf"]
              description: MIME type of the file

    Address:
      type: object
      properties:
        street:
          type: string
          minLength: 5
          maxLength: 200
          example: Jl. Raya No. 123
          description: Nama jalan dan nomor rumah
        rt_rw:
          type: string
          pattern: '^RT\s\d{1,3}\/RW\s\d{1,3}$'
          example: RT 01/02
          description: RT/RW dalam format 'RT XXX/RW YYY'
        subdistrict:
          type: string
          minLength: 2
          maxLength: 100
          example: Kebon Jeruk
          description: Nama kelurahan/desa
        district:
          type: string
          minLength: 2
          maxLength: 100
          example: Kebon Jeruk
          description: Nama kecamatan
        city:
          type: string
          minLength: 2
          maxLength: 100
          example: Jakarta Barat
          description: Nama kota/kabupaten
        province:
          type: string
          minLength: 2
          maxLength: 100
          example: Jakarta
          description: Nama provinsi
        zip_code:
          type: string
          pattern: '^\d{5}$'
          example: 12345
          description: Kode pos (5 digit)
        country:
          type: string
          enum: ["Indonesia"]
          default: Indonesia
          example: Indonesia
          description: Nama negara
        residence_status:
          type: string
          enum: ["Permanent", "Temporary", "Contract"]
          example: Permanent
          description: Status tempat tinggal
    EmergencyContact:
      type: object
      properties:
        contact_name:
          type: string
          example: "Andi"
        relationship:
          type: string
          example: "Brother"
        contact_number:
          type: string
          example: "+6281234567890"
        contact_address:
          type: string
          example: "Jl. Melati No. 10, Jakarta"
    Education:
      type: object
      required:
        - education_level
        - institution
        - start_year
        - end_year
      properties:
        education_level:
          type: string
          enum:
            [
              "SD",
              "SMP",
              "SMA",
              "SMK",
              "D1",
              "D2",
              "D3",
              "D4",
              "S1",
              "S2",
              "S3",
            ]
          example: "S1"
          description: Jenjang pendidikan
        major:
          type: string
          minLength: 2
          maxLength: 100
          example: "Teknik Informatika"
          description: Jurusan/program studi (untuk pendidikan tinggi)
        institution:
          type: string
          minLength: 2
          maxLength: 200
          example: "Universitas Indonesia"
          description: Nama institusi pendidikan
        start_year:
          type: integer
          minimum: 1950
          maximum: 2030
          example: 2018
          description: Tahun masuk
        end_year:
          type: integer
          minimum: 1950
          maximum: 2030
          example: 2022
          description: Tahun lulus
        gpa:
          type: number
          minimum: 0
          maximum: 4
          multipleOf: 0.01
          example: 3.75
          description: IPK/GPA (skala 4.0)
        ijazah_photo:
          type: string
          format: binary
          description: File ijazah (PDF/JPG/PNG, max 5MB)

    FavoriteAppRequest:
      type: object
      required:
        - app_id
      properties:
        app_id:
          type: integer
          minimum: 1
          example: 123
          description: ID aplikasi yang akan ditambahkan ke favorit
    BasicInformation:
      type: object
      properties:
        employee_name:
          type: string
          example: Sarah Wijaya
        professional_photo:
          type: string
          format: uri
          example: https://static.vecteezy.com/system/resources/previews/036/459/918/non_2x/ai-generated-young-caucasian-woman-corporate-portrait-png.png
        place_of_birth:
          type: string
          example: Jakarta
        birth_date:
          type: string
          format: date
          example: 1990-01-01
        gender:
          type: string
          enum:
            - male
            - female
          example: male
        id_number_ktp:
          type: string
          example: 1234567890123456
        passport_number:
          type: string
          example: A12345678
        religion:
          type: string
          example: Islam
        marital_status:
          type: string
          example: Single
        nationality:
          type: string
          example: Indonesia
        clothing_size:
          type: string
          example: M
        main_phone_number:
          type: string
          example: 081234567890
        secondary_phone_number:
          type: string
          example: 081298765432
        private_email:
          type: string
          format: email
          example: example.employee@gmail.com
        photo_ktp:
          type: string
          format: uri
          example: https://tangselife.com/wp-content/uploads/2024/03/2024-03-06-1.jpg
    Family:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            description: Nama lengkap anggota keluarga
            example: "Jane Doe"
          gender:
            type: string
            enum: [Male, Female]
            description: Jenis kelamin
            example: "Female"
          dateOfBirth:
            type: string
            format: date
            description: Tanggal lahir (format YYYY-MM-DD)
            example: "1995-06-10"
          placeOfBirth:
            type: string
            description: Tempat lahir
            example: "Surabaya"
          address:
            type: string
            description: Alamat anggota keluarga
            example: "Jl. Keluarga No. 5"
          occupation:
            type: string
            description: Pekerjaan anggota keluarga
            example: "Guru"
          relation:
            type: string
            description: Hubungan dengan karyawan
            example: "Istri"
          maritalStatus:
            type: string
            enum: [Single, Married, Divorced, Widowed]
            description: Status pernikahan
            example: "Married"
          memberSequence:
            type: integer
            description: Urutan anggota dalam keluarga
            example: 2
          telkomedikaCardNumber:
            type: string
            description: Nomor kartu Telkomedika
            example: "TKM12345678"
          telkomedikaMemberStatus:
            type: string
            enum: [Active, Inactive]
            description: Status keanggotaan Telkomedika
            example: "Active"
          photoOfKK:
            type: string
            format: binary
            description: Foto dari Kartu Keluarga
    PayrollAccount:
      type: object
      properties:
        bank_account_number:
          type: string
          example: "1234567890"
        bank_name:
          type: string
          example: "Bank BCA"
        account_holder_name:
          type: string
          example: "Budi Santoso"
        tax_status:
          type: string
          example: "Single"
        tax_number:
          type: string
          example: "09.123.456.7-890.000"
        npwp_photo:
          type: string
          format: binary
          description: Upload foto NPWP
        saving_book_photo:
          type: string
          format: binary
          description: Foto halaman depan buku tabungan
    SocialSecurity:
      type: object
      properties:
        telkomedika_card_number:
          type: string
        bpjs_tk_number:
          type: string
        bpjs_tk_effective_date:
          type: string
          format: date
        bpjs_kesehatan_number:
          type: string
        telkomedika_card_photo:
          type: string
          format: binary
        bpjs_card_photo:
          type: string
          format: binary
    MedicalRecord:
      type: object
      properties:
        health_status:
          type: string
        last_mcu_date:
          type: string
          format: date
        blood_type:
          type: string
          enum: [A, B, AB, O]
        height_cm:
          type: number
        weight_cm:
          type: number
        has_disability:
          type: boolean
        head_size:
          type: string
        health_concern:
          type: string
        medical_treatment_record:
          type: string
    EmploymentInfo:
      type: object
      properties:
        nik:
          type: string
        nik_telkom:
          type: string
        business_email:
          type: string
        directorate:
          type: string
        business_unit:
          type: string
        divisi:
          type: string
        grade:
          type: string
        grade_date:
          type: string
          format: date
        band_position:
          type: string
        band_position_date:
          type: string
          format: date
        level:
          type: string
        level_date:
          type: string
          format: date
        position:
          type: string
        supervisor:
          type: string
        join_date:
          type: string
          format: date
        start_date:
          type: string
          format: date
        terminate_date:
          type: string
          format: date
        reason_employee_in:
          type: string
        reason_employee_out:
          type: string
        status:
          type: string
        retirement_date:
          type: string
          format: date
    FavoriteApp:
      type: object
      properties:
        app_id:
          type: integer
          example: 1
        name:
          type: string
          example: Manage Data
        code:
          type: string
          example: UP
        description:
          type: string
          example: Lorem ipsum...
        url:
          type: string
          format: uri
          example: https://...
        category:
          type: string
          example: HR
        platform:
          type: string
          example: HC Platform
    FavoriteCategory:
      type: object
      properties:
        category_id:
          type: integer
          example: 1
        name:
          type: string
          example: HR
    FavoriteOrder:
      type: object
      required:
        - new_order
      properties:
        new_order:
          type: integer

    SubmittedRequestResponse:
      type: object
      properties:
        request_id:
          type: string
        status:
          type: string
          enum: [submitted]
        reviewer:
          type: string
          description: Nama reviewer
        reviewed_at:
          type: string
          format: date-time
          description: Tanggal dan jam review (WIB)
        data:
          type: object
          additionalProperties: true
      required: [request_id, status, reviewer, reviewed_at, data]
      example:
        request_id: ESS-WAP001
        status: submitted
        reviewer: Maria Garcia
        reviewed_at: "2024-03-01T15:30:00+07:00"
        data:
          type: personal_data_update
          employee_name: Ahmad Rahman
          email: ahmad.rahman@gmail.com
      x-error-example:
        status: false
        message: "Request not found or not in submitted status."
    ApprovedRequestResponse:
      type: object
      properties:
        request_id:
          type: string
        status:
          type: string
          enum: [approved]
        reviewer:
          type: string
        reviewed_at:
          type: string
          format: date-time
        data:
          type: object
          additionalProperties: true
      required: [id, status, reviewer, reviewed_at, data]
      example:
        request_id: ESS-APROV001
        status: approved
        reviewer: Maria Garcia
        reviewed_at: "2024-03-01T16:00:00+07:00"
        data:
          type: personal_data_update
          employee_name: Ahmad Rahman
          email: ahmad.rahman@gmail.com
      x-error-example:
        status: false
        message: "Request not found or not in approved status."
    RejectedRequestResponse:
      type: object
      properties:
        request_id:
          type: string
        status:
          type: string
          enum: [rejected]
        reviewer:
          type: string
        reviewed_at:
          type: string
          format: date-time
        hc_review_note:
          type: string
          description: Catatan/reason dari reviewer HC
        data:
          type: object
          additionalProperties: true
      required: [id, status, reviewer, reviewed_at, hc_review_note, data]
      example:
        request_id: ESS-RJCT001
        status: rejected
        reviewer: Maria Garcia
        reviewed_at: "2024-03-01T16:10:00+07:00"
        hc_review_note: "Dokumen pendukung tidak lengkap. Mohon lengkapi dan submit ulang."
        data:
          type: personal_data_update
          employee_name: Ahmad Rahman
          email: ahmad.rahman@gmail.com
      x-error-example:
        status: false
        message: "Request not found or not in rejected status."
    HistoryRequestItem:
      type: object
      properties:
        request_id:
          type: string
          description: Request ID (e.g. ESS-APROV001)
          example: ESS-APROV001
        update:
          type: string
          description: Kategori update (BasicInformation, Address, EmergencyContact, PayrollAccount, Family, Education, SocialSecurity, MedicalRecord, EmploymentInfo )
          example: data_employee
        status:
          type: string
          enum: [draft, approved, waiting_approval, rejected]
          description: Status perubahan
          example: approved
        date_change:
          type: string
          format: date-time
          description: Tanggal perubahan (M-D-Y, TIME)
          example: 2025-07-26T10:00:00Z
        approved_at:
          type: string
          format: date-time
          nullable: true
          description: Tanggal disetujui (M-D-Y, TIME) jika ada
          example: 2025-07-26T15:00:00Z
        reviewer:
          type: string
          nullable: true
          description: Nama reviewer jika ada
          example: Rina Sari
        reason_update:
          type: string
          description: Alasan perubahan dari user
          example: Perubahan status pernikahan setelah update KTP terbaru
    SuccessResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        message:
          type: string
          example: Operasi berhasil.
        data:
          type: object
          nullable: true
      required:
        - status
        - message
    AuthenticatedResponseWithPhoto:
      type: object
      properties:
        status:
          type: boolean
          example: true
        message:
          type: string
          example: Foto berhasil diperbarui.
        data:
          type: object
          properties:
            photo_profile_ess:
              type: string
              format: uri
              example: https://www.purina.co.id/sites/default/files/2023-01/15%20Nama%20Kucing%20Jantan%20dan%20Artinya%20copy.jpg

    AppItem:
      type: object
      properties:
        app_id:
          type: integer
        name:
          type: string
        code:
          type: string
        description:
          type: string
        url:
          type: string
          format: uri
        icon:
          type: string
          format: uri
        is_favorite:
          type: boolean
      example:
        app_id: 2
        name: Sigpass
        code: SG
        description: Aplikasi autentikasi Single Sign-On (SSO) untuk mengakses berbagai layanan internal Telkomsigma.
        url: https://sigpass-sso.telkomsigma.co.id/
        icon: https://cdn-icons-png.flaticon.com/512/3064/3064197.png
        is_favorite: false

    AppItemList:
      type: array
      items:
        $ref: "#/components/schemas/AppItem"
      example:
        - app_id: 2
          name: Sigpass
          code: SG
          description: Aplikasi autentikasi Single Sign-On (SSO) untuk mengakses berbagai layanan internal Telkomsigma.
          url: https://sigpass-sso.telkomsigma.co.id/
          icon: https://cdn-icons-png.flaticon.com/512/3064/3064197.png
          is_favorite: false
        - app_id: 3
          name: Mango
          code: SA
          description: Aplikasi manajemen karyawan untuk pengajuan cuti, izin, dan pengelolaan data karyawan.
          url: https://www.xl.co.id/
          icon: https://cdn-icons-png.flaticon.com/512/1077/1077012.png
          is_favorite: true

    AppsByPlatform:
      type: object
      properties:
        smart_access:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: Slack
              url:
                type: string
                format: uri
                example: https://www.telkomsel.com/
              icon:
                type: string
                format: uri
                example: https://lokerbumn.com/wp-content/uploads/2024/07/Telkomsel-02.jpg
        apps:
          type: object
          properties:
            HC Platform:
              type: object
              properties:
                Human Resources (HR):
                  $ref: "#/components/schemas/AppItemList"
            IT Platform:
              type: object
              properties:
                IT Services:
                  $ref: "#/components/schemas/AppItemList"
            Finance Platform:
              type: object
              properties:
                Financial Management:
                  $ref: "#/components/schemas/AppItemList"
            Marketing Platform:
              type: object
              properties:
                Digital Marketing:
                  $ref: "#/components/schemas/AppItemList"
      example:
        smart_access:
          - name: Slack
            url: https://www.telkomsel.com/
            icon: https://lokerbumn.com/wp-content/uploads/2024/07/Telkomsel-02.jpg
        apps:
          HC Platform:
            Human Resources (HR):
              - app_id: 2
                name: Sigpass
                code: SG
                description: Aplikasi autentikasi Single Sign-On (SSO) untuk mengakses berbagai layanan internal Telkomsigma.
                url: https://sigpass-sso.telkomsigma.co.id/
                icon: https://cdn-icons-png.flaticon.com/512/3064/3064197.png
                is_favorite: false
              - app_id: 3
                name: Mango
                code: SA
                description: Aplikasi manajemen karyawan untuk pengajuan cuti, izin, dan pengelolaan data karyawan.
                url: https://www.xl.co.id/
                icon: https://cdn-icons-png.flaticon.com/512/1077/1077012.png
                is_favorite: true
          IT Platform:
            IT Services:
              - app_id: 10
                name: Slack
                code: SA
                description: Platform kolaborasi tim untuk komunikasi, berbagi file, dan integrasi dengan berbagai layanan kerja.
                url: https://www.telkomsel.com/
                icon: https://lokerbumn.com/wp-content/uploads/2024/07/Telkomsel-02.jpg
                is_favorite: false
          Finance Platform:
            Financial Management:
              - app_id: 20
                name: Fintrack
                code: FT
                description: Aplikasi pelacakan pengeluaran dan pemasukan perusahaan secara real-time.
                url: https://finance.telkomsigma.co.id/
                icon: https://cdn-icons-png.flaticon.com/512/1170/1170576.png
                is_favorite: false
          Marketing Platform:
            Digital Marketing:
              - app_id: 30
                name: CampaignX
                code: CX
                description: Aplikasi manajemen kampanye digital untuk sosial media dan analitik.
                url: https://campaignx.telkomsigma.co.id/
                icon: https://cdn-icons-png.flaticon.com/512/747/747376.png
                is_favorite: true

  responses:
    LoginSuccess:
      description: Authenticated
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginResponse"
          examples:
            LoginSuccessExample:
              summary: Successful login response
              value:
                status: true
                messages: "your data is available"
                data:
                  employee_id: "S0242422"
                  employee_name: "Sarah Wijaya"
                  email: "example.employee@sigma.co.id"
                  employee_level: "OFFICER"
                  employee_position: "OFFICER IT DEVELOPMENT AND ACQUISITION"
                  unit: "Corporate Information System and Security"
                  organization: "IT Development and Acquisition"
                  spv_id: "S20250236"
                  spv_name: "EXAMPLE SUPERVISOR"
                  company_code: "SCC"
                  authenticator: "ACTIVE DIRECTORY"
                token:
                  access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refresh_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

    BadRequest:
      description: Bad Request - Invalid Input
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            ValidationError:
              summary: Validation error example
              value:
                status: false
                messages:
                  email:
                    - "The email field must be a valid email address."
                    - "The email field format is invalid."

    Unauthorized:
      description: Unauthorized - Invalid Credentials
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            InvalidCredentials:
              summary: Invalid credentials example
              value:
                status: false
                messages: "incorrect username or password"

    Unauthenticated:
      description: Unauthenticated - Token Missing or Invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MessageOnlyErrorResponse"
          examples:
            TokenMissing:
              summary: Token missing example
              value:
                message: "Unauthenticated."

    Forbidden:
      description: Forbidden - Insufficient Permissions
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            InsufficientPermissions:
              summary: Insufficient permissions example
              value:
                status: false
                message: "You don't have permission to access this resource."

    NotFound:
      description: Not Found - Resource Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            ResourceNotFound:
              summary: Resource not found example
              value:
                status: false
                message: "The requested resource was not found."

    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            ServerError:
              summary: Internal server error example
              value:
                status: false
                message: "An internal server error occurred. Please try again later."

    PasswordExpired:
      description: Password Expired
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    AccountLocked:
      description: Temporarily Blocked
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    ServiceUnavailable:
      description: External Service Unavailable
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
  examples:
    BasicInformationExample:
      summary: Basic Information
      value:
        employee_name: Sarah Wijaya
        professional_photo: https://static.vecteezy.com/system/resources/previews/036/459/918/non_2x/ai-generated-young-caucasian-woman-corporate-portrait-png.png
        place_of_birth: Jakarta
        birth_date: 1990-01-01
        gender: male
        id_number_ktp: "1234567890123456"
        passport_number: A12345678
        religion: Islam
        marital_status: Single
        nationality: Indonesia
        clothing_size: M
        main_phone_number: "081234567890"
        secondary_phone_number: "081298765432"
        private_email: example.employee@gmail.com
        photo_ktp: https://tangselife.com/wp-content/uploads/2024/03/2024-03-06-1.jpg
    AddressExample:
      summary: Address
      value:
        official_address:
          detail: Jalan Telekomunikasi No.1
          province: Jawa Barat
          city: Bandung
          postal_code: 40135
          sub_district: Coblong
          administrative_village: Dago
          rt: "003"
          rw: "006"
          street_name: Jl. Telekomunikasi
          house_number: 1
        domicile_address:
          detail: Jalan Merdeka No.5
          province: DKI Jakarta
          city: Jakarta Pusat
          postal_code: 10210
          sub_district: Gambir
          administrative_village: Petojo
          rt: "005"
          rw: "002"
          street_name: Jl. Merdeka
          house_number: 5
    EmergencyContactExample:
      summary: Emergency Contact
      value:
        name: David Chen
        relationship: Brother
        phone_number: "08123456789"
        address: Jl. Mawar No. 10, Jakarta
    PayrollAccountExample:
      summary: Payroll Account
      value:
        bank_account_number: "1234567890"
        bank_name: BCA
        account_holder_name: Ahmad Rahman
        tax_status: TK/0
        tax_number: "321654987123000"
        npwp_doc: https://www.gadjian.com/blog/wp-content/uploads/2023/07/Contoh-NPWP.png
        saving_book_doc: https://imgv2-1-f.scribdassets.com/img/document/514794367/original/48675c427f/1687635901?v=1
    FamilyExample:
      summary: Family
      value:
        - name: Fatimah Azzahra
          gender: female
          birth_date: 1965-10-12
          place_of_birth: Bandung
          address: Jl. Bunga No. 8
          occupation: Ibu Rumah Tangga
          relation: Ibu
          marital_status: Married
          member_sequence: 1
          telkomedika_card_number: "TKM123456"
          telkomedika_member_status: Active
          kk_doc: https://www.bhuanajaya.desa.id/wp-content/uploads/images/kartu-keluarga-kk.webp
        - name: Muhammad Rizki
          gender: male
          birth_date: 1960-03-20
          place_of_birth: Jakarta
          address: Jl. Bunga No. 8
          occupation: Wiraswasta
          relation: Ayah
          marital_status: Married
          member_sequence: 2
          telkomedika_card_number: "TKM654321"
          telkomedika_member_status: Active
          kk_doc: https://www.bhuanajaya.desa.id/wp-content/uploads/images/kartu-keluarga-kk.webp
    EducationExample:
      summary: Education
      value:
        - level: S1
          major: Teknik Informatika
          institution: Universitas Indonesia
          start_year: 2008
          end_year: 2012
          ijazah_doc: https://i.pinimg.com/736x/68/54/20/68542058424b9a007f5182dd9d24b8ee.jpg
        - level: SMA
          major: IPA
          institution: SMAN 1 Jakarta
          start_year: 2005
          end_year: 2008
          ijazah_doc: https://tse4.mm.bing.net/th/id/OIP.yz4cy3T-jpso41MhFTLcRgHaKT?rs=1&pid=ImgDetMain&o=7&rm=3
    SocialSecurityExample:
      summary: Social Security & Insurance
      value:
        telkomedika_card_number: "TKM202301"
        bpjs_tk_number: "BPJSTK123456"
        bpjs_tk_effective_date: 2015-01-01
        bpjs_health_number: "BPJSKES654321"
        telkomedika_doc: https://i.colnect.net/f/6891/506/Telkom_University_-_TelkoMedika.jpg
        bpjs_doc: https://tse2.mm.bing.net/th/id/OIP.H7mh-OS-o-xZ5l3Hgfu_ggHaEb?rs=1&pid=ImgDetMain&o=7&rm=3
    MedicalRecordExample:
      summary: Medical Record
      value:
        health_status: Fit
        last_mcu_date: 2023-06-15
        blood_type: O
        height: 170.5
        weight: 65.0
        has_disability: No
        head_size: 57 cm
        health_concern: Tidak ada
        medical_treatment_record: Tidak ada riwayat penyakit berat
    EmploymentInfoExample:
      summary: Employee Information
      value:
        nik: 3623243632523
        nik_telkom: 21462176421
        business_email: sarahwijaya@sigma.co.id
        directorate: Corporate IT
        business_unit: SCC
        division: IT Development
        grade: 7
        grade_date: 2020-01-01
        band_position: Officer
        band_position_date: 2018-07-01
        level: Officer
        level_date: 2018-01-01
        position: Backend Developer
        supervisor: S20250236
        join_date: 2015-01-01
        start_date: 2015-02-01
        terminate_date: null
        reason_employee_in: Recruitment
        reason_employee_out: null
        status: Active
        retirement_date: null
    FamilyMember:
      summary: Contoh data keluarga
      value:
        name: "Ayu Lestari"
        gender: "female"
        date_of_birth: "1990-05-14"
        place_of_birth: "Bandung"
        address: "Jl. Merpati No. 5, Bandung"
        occupation: "Guru"
        relation: "Istri"
        marital_status: "Menikah"
        member_sequence: 1
        telkomedika_card_number: "TKM123456789"
        telkomedika_member_status: "Aktif"
        kk_doc: "https://www.bhuanajaya.desa.id/wp-content/uploads/images/kartu-keluarga-kk.webp"
    ApprovedHistoryExample:
      summary: Approved History Example
      value:
        status_summary:
          approved: 5
        data:
          - request_id: ESS-APPROV002
            update: address
            status: approved
            date_change: 2025-07-20T09:00:00Z
            approved_at: 2025-07-21T10:30:00Z
            reviewer: Dewi Putri
            reason_update: Pindah tempat tinggal
          - request_id: ESS-APROV003
            update: family
            status: approved
            date_change: 2025-07-10T10:00:00Z
            approved_at: 2025-07-11T09:00:00Z
            reviewer: Linda Kusuma
            reason_update: Tambah data anak
          - request_id: ESS-APROV004
            update: education
            status: approved
            date_change: 2025-07-05T15:20:00Z
            approved_at: 2025-07-06T10:45:00Z
            reviewer: Andi Pratama
            reason_update: Update ijazah terakhir
          - request_id: ESS-APROV005
            update: emergency_contact
            status: approved
            date_change: 2025-06-28T12:00:00Z
            approved_at: 2025-06-29T13:30:00Z
            reviewer: Siti Nurhaliza
            reason_update: Ganti nomor kontak darurat
          - request_id: ESS-APROV008
            update: payroll_account
            status: approved
            date_change: 2025-07-02T08:45:00Z
            approved_at: 2025-07-03T09:00:00Z
            reviewer: Bambang Widodo
            reason_update: Perubahan nomor rekening

    DraftHistoryExample:
      summary: Draft History Example
      value:
        - request_id: ESS-DF001
          update: data_employee
          status: draft
          date_change: 2025-07-25T14:00:00Z
          approved_at: null
          reviewer: null
          reason_update: Perubahan data email pribadi
          changes:
            private_email: privatesarah@gmail.com

    WaitingApprovalHistoryExample:
      summary: Waiting Approval History Example
      value:
        - request_id: ESS-WAP006
          update: family
          status: waiting_approval
          date_change: 2025-07-22T16:00:00Z
          approved_at: null
          reviewer: null
          reason_update: Tambah data anak
          changes:
            name: "Zahra Safira"
            gender: "Perempuan"
            date_of_birth: "2020-05-12"
            relation: "Anak"
            marital_status: "Single"

    ApprovedRequestExample:
      summary: Approved Request Example
      value:
        request_id: ESS-APROV011
        update: address
        status: approved
        date_change: 2025-07-21T10:00:00Z
        approved_at: 2025-07-22T09:00:00Z
        reviewer: Dewi Putri
        reason_update: Perubahan alamat domisili terbaru
        changes:
          domicile_address:
            province: "Jawa Barat"
            city: "Bekasi"
            postal_code: "17145"
            street_name: "Jl. Melati No.5"

    RejectedRequestExample:
      summary: Reject Request Example
      value:
        request_id: ESS-RJCT012
        update: education
        status: rejected
        date_change: 2025-07-19T13:30:00Z
        approved_at: null
        reviewer: Joko Susilo
        reason_update: Update gelar pendidikan terakhir
        hc_review_note: "Dokumen ijazah tidak sesuai format yang diminta"
        changes:
          education_level: "S2"
          major: "Teknik Industri"
          institution: "Universitas Indonesia"
          end_year: 2024
